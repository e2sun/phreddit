{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/UserComment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\nexport default function UserComment({\n  comment,\n  handleError\n}) {\n  _s();\n  const shortenedContent = comment.content.length > 20 ? comment.content.substring(0, 20) + \"...\" : comment.content;\n  const [post, setPost] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const res = await axios.get(`/post/${comment._id}`);\n        setPost(res.data);\n      } catch (err) {\n        console.error('Error fetching comment parent post');\n        handleError(err);\n      }\n    };\n    fetchPost();\n  }, [comment._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"formatted_comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Post:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this), \" \", post ? post.title : 'Loading post']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this), \" \", shortenedContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(UserComment, \"VAK5tdJEk0cqnRsmbvM4YDyoQLs=\");\n_c = UserComment;\n;\nconst commentShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  commentedBy: PropTypes.string.isRequired,\n  commentedDate: PropTypes.instanceOf(Date).isRequired\n});\nUserComment.propTypes = {\n  comment: commentShape.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"UserComment\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","axios","jsxDEV","_jsxDEV","defaults","baseURL","UserComment","comment","handleError","_s","shortenedContent","content","length","substring","post","setPost","fetchPost","res","get","_id","data","err","console","error","class","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","commentShape","shape","string","isRequired","commentIDs","arrayOf","commentedBy","commentedDate","instanceOf","Date","propTypes","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/UserComment.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:8000';\n\nexport default function UserComment({comment, handleError}){\n    const shortenedContent = comment.content.length > 20? comment.content.substring(0, 20) + \"...\" : comment.content;\n    const [post, setPost] = useState(null);\n    \n    useEffect(() => {\n        const fetchPost = async() => {\n            try{\n                const res = await axios.get(`/post/${comment._id}`);\n                setPost(res.data);\n            } catch (err) {\n                console.error('Error fetching comment parent post');\n                handleError(err);\n            }\n        };\n\n        fetchPost();\n    }, [comment._id])\n\n    return (\n        <div class=\"formatted_comment\">\n             {/* Add post title that comment belongs to */}\n            <p><b>Post:</b> {post ? post.title : 'Loading post'}</p>\n            <p><b>Comment:</b> {shortenedContent}</p>\n        </div>\n    );\n};\n\nconst commentShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  commentedBy: PropTypes.string.isRequired,\n  commentedDate: PropTypes.instanceOf(Date).isRequired\n});\n\nUserComment.propTypes = {\n    comment: commentShape.isRequired\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1BF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAG,uBAAuB;AAEhD,eAAe,SAASC,WAAWA,CAAC;EAACC,OAAO;EAAEC;AAAW,CAAC,EAAC;EAAAC,EAAA;EACvD,MAAMC,gBAAgB,GAAGH,OAAO,CAACI,OAAO,CAACC,MAAM,GAAG,EAAE,GAAEL,OAAO,CAACI,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAGN,OAAO,CAACI,OAAO;EAChH,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAW;MACzB,IAAG;QACC,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,SAASX,OAAO,CAACY,GAAG,EAAE,CAAC;QACnDJ,OAAO,CAACE,GAAG,CAACG,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;QACnDf,WAAW,CAACa,GAAG,CAAC;MACpB;IACJ,CAAC;IAEDL,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACT,OAAO,CAACY,GAAG,CAAC,CAAC;EAEjB,oBACIhB,OAAA;IAAKqB,KAAK,EAAC,mBAAmB;IAAAC,QAAA,gBAE1BtB,OAAA;MAAAsB,QAAA,gBAAGtB,OAAA;QAAAsB,QAAA,EAAG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,KAAC,EAACf,IAAI,GAAGA,IAAI,CAACgB,KAAK,GAAG,cAAc;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxD1B,OAAA;MAAAsB,QAAA,gBAAGtB,OAAA;QAAAsB,QAAA,EAAG;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,KAAC,EAACnB,gBAAgB;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd;AAACpB,EAAA,CAzBuBH,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAyBlC;AAED,MAAM0B,YAAY,GAAGhC,SAAS,CAACiC,KAAK,CAAC;EACnCd,GAAG,EAAEnB,SAAS,CAACkC,MAAM,CAACC,UAAU;EAChCxB,OAAO,EAAEX,SAAS,CAACkC,MAAM,CAACC,UAAU;EACpCC,UAAU,EAAEpC,SAAS,CAACqC,OAAO,CAACrC,SAAS,CAACkC,MAAM,CAAC,CAACC,UAAU;EAC1DG,WAAW,EAAEtC,SAAS,CAACkC,MAAM,CAACC,UAAU;EACxCI,aAAa,EAAEvC,SAAS,CAACwC,UAAU,CAACC,IAAI,CAAC,CAACN;AAC5C,CAAC,CAAC;AAEF7B,WAAW,CAACoC,SAAS,GAAG;EACpBnC,OAAO,EAAEyB,YAAY,CAACG;AAC1B,CAAC;AAAA,IAAAJ,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}