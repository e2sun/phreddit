{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Post from './Post.jsx';\nimport SortPosts from \"./SortPosts.jsx\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\nexport default function SearchBar({\n  searchQuery,\n  goToPostPage,\n  getCommunityName,\n  getCommentLength,\n  isLoggedIn,\n  handleError,\n  searchTrigger,\n  checkPostExists\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [type, setType] = useState('newest');\n  const [comments, setComments] = useState([]);\n  const [user, setUsers] = useState(null);\n  const [communities, setCommunities] = useState([]);\n  useEffect(() => {\n    async function fetchAll() {\n      try {\n        const [postsRes, commentsRes, commRes] = await Promise.all([axios.get('/posts'), axios.get('/comments'), axios.get('/communities')]);\n        setPosts(postsRes.data);\n        setComments(commentsRes.data);\n        setCommunities(commRes.data);\n      } catch (err) {\n        console.log(err);\n        handleError(err);\n      }\n    }\n    fetchAll();\n  }, [searchQuery, searchTrigger]);\n  useEffect(() => {\n    async function fetchUser() {\n      if (!isLoggedIn) {\n        return;\n      }\n      try {\n        const [userRes] = await Promise.all([axios.get('/userProfile')]);\n        setUsers(userRes.data);\n      } catch (err) {\n        console.log(err);\n        handleError(err);\n      }\n    }\n    fetchUser();\n  }, [searchQuery, searchTrigger]);\n  if (isLoggedIn && user === null) {\n    return;\n  }\n  const getSearch = searchQuery => {\n    const terms = searchQuery.trim().toLowerCase().split(/\\s+/).filter(t => t.length > 0);\n    return posts.filter(post => {\n      const filtered_posts = (post.title + ' ' + (post.content || '')).toLowerCase();\n      return terms.some(term => filtered_posts.includes(term));\n    });\n  };\n  const searchPosts = getSearch(searchQuery);\n\n  //Map post id to parent community\n  const postToCommunity = {};\n  communities.forEach(c => c.postIDs.forEach(pid => {\n    postToCommunity[pid] = c._id;\n  }));\n\n  //Find out which community the user is in\n\n  if (isLoggedIn && user) {\n    const userCommIDs = communities.filter(c => c.members.includes(user.email)).map(c => c._id);\n\n    //Splitting posts\n    const user_posts = searchPosts.filter(p => userCommIDs.includes(postToCommunity[p._id]));\n    const other_posts = searchPosts.filter(p => !userCommIDs.includes(postToCommunity[p._id]));\n\n    //Sorting\n    var filteredUserPosts = SortPosts({\n      array: user_posts,\n      type,\n      comments\n    });\n    var filteredOtherPosts = SortPosts({\n      array: other_posts,\n      type,\n      comments\n    });\n  } else {\n    //Sorting\n    var filteredPosts = SortPosts({\n      array: searchPosts,\n      type,\n      comments\n    });\n  }\n  const handleClick = order => {\n    setType(order);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"searchbar_setup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search_wrapper\",\n      children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filteredUserPosts.length === 0 && filteredOtherPosts === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"red_header\",\n          children: [\"No results found for: \\\"\", searchQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 88\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"red_header\",\n          children: [\"Results for: \\\"\", searchQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 170\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: filteredPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"red_header\",\n          children: [\"No results found for: \\\"\", searchQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 279\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"red_header\",\n          children: [\"Results for: \\\"\", searchQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 361\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community_newest\",\n          onClick: () => handleClick('newest'),\n          children: \"Newest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community_oldest\",\n          onClick: () => handleClick('oldest'),\n          children: \"Oldest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community_active\",\n          onClick: () => handleClick('active'),\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_post_results\",\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [filteredUserPosts.length + filteredOtherPosts.length, \" Posts found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 26\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [filteredPosts.length, \" Posts found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 111\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"posts\",\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"posts\",\n          children: filteredUserPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n            post: post,\n            goToPostPage: goToPostPage,\n            getCommunityName: getCommunityName,\n            community: false,\n            getCommentLength: getCommentLength,\n            checkPostExists: checkPostExists\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"posts\",\n          children: filteredOtherPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n            post: post,\n            goToPostPage: goToPostPage,\n            getCommunityName: getCommunityName,\n            community: false,\n            getCommentLength: getCommentLength,\n            checkPostExists: checkPostExists\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"posts\",\n        children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          goToPostPage: goToPostPage,\n          getCommunityName: getCommunityName,\n          community: false,\n          getCommentLength: getCommentLength,\n          checkPostExists: checkPostExists\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"459gcNETxIM6+K7rLy06fYZW9qw=\");\n_c = SearchBar;\nconst commentShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  commentedBy: PropTypes.string.isRequired,\n  commentedDate: PropTypes.instanceOf(Date).isRequired\n});\nconst postShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  linkFlairID: PropTypes.string.isRequired,\n  postedBy: PropTypes.string.isRequired,\n  postedDate: PropTypes.instanceOf(Date).isRequired,\n  commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  views: PropTypes.number.isRequired\n});\nSearchBar.propTypes = {\n  posts: PropTypes.arrayOf(postShape).isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  goToPostPage: PropTypes.func.isRequired,\n  getCommunityName: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf(commentShape).isRequired,\n  getCommentLength: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","Post","SortPosts","PropTypes","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","defaults","baseURL","SearchBar","searchQuery","goToPostPage","getCommunityName","getCommentLength","isLoggedIn","handleError","searchTrigger","checkPostExists","_s","posts","setPosts","type","setType","comments","setComments","user","setUsers","communities","setCommunities","fetchAll","postsRes","commentsRes","commRes","Promise","all","get","data","err","console","log","fetchUser","userRes","getSearch","terms","trim","toLowerCase","split","filter","t","length","post","filtered_posts","title","content","some","term","includes","searchPosts","postToCommunity","forEach","c","postIDs","pid","_id","userCommIDs","members","email","map","user_posts","p","other_posts","filteredUserPosts","array","filteredOtherPosts","filteredPosts","handleClick","order","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","community","_c","commentShape","shape","string","isRequired","commentIDs","arrayOf","commentedBy","commentedDate","instanceOf","Date","postShape","linkFlairID","postedBy","postedDate","views","number","propTypes","func","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Post from './Post.jsx';\nimport SortPosts from \"./SortPosts.jsx\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:8000';\n\nexport default function SearchBar({ searchQuery, goToPostPage, getCommunityName, getCommentLength, isLoggedIn, handleError,searchTrigger, checkPostExists}) {\n  const [posts, setPosts] = useState([]);\n  const [type, setType] = useState('newest');\n  const [comments, setComments] = useState([]);\n  const [user, setUsers] = useState(null);\n  const [communities, setCommunities] = useState([]);  \n\n      useEffect(()=>{\n          async function fetchAll(){\n              try{\n                  const [postsRes, commentsRes, commRes] = await Promise.all([\n                      axios.get('/posts'),\n                      axios.get('/comments'),\n                      axios.get('/communities')\n                  ]);\n                  setPosts(postsRes.data);\n                  setComments(commentsRes.data);\n                  setCommunities(commRes.data)\n              }\n              catch (err){\n                  console.log(err);\n                  handleError(err);\n              }\n          }\n  \n          fetchAll();\n      }, [searchQuery, searchTrigger]);\n\n      useEffect(()=>{\n        async function fetchUser(){\n            if (!isLoggedIn){\n                return;\n            }\n            try{\n                const [userRes] = await Promise.all([\n                    axios.get('/userProfile')\n                ]);\n                setUsers(userRes.data);\n            }\n            catch (err){\n                console.log(err);\n                handleError(err);\n            }\n        }\n\n        fetchUser();\n    }, [searchQuery, searchTrigger]);\n\n    if (isLoggedIn && user === null) {\n      return;\n  }\n\n  const getSearch = (searchQuery) => {\n   \n    const terms = searchQuery\n      .trim()\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(t => t.length > 0);\n  \n    return posts.filter(post => {\n      const filtered_posts = (\n        post.title +' ' +(post.content || '')\n      ).toLowerCase();\n\n      return terms.some(term => filtered_posts.includes(term));\n    });\n  };\n\n  const searchPosts = getSearch(searchQuery);\n\n\n  //Map post id to parent community\n  const postToCommunity = {};\n  communities.forEach(c =>\n      c.postIDs.forEach(pid => {\n          postToCommunity[pid] = c._id;\n      })\n  );\n\n//Find out which community the user is in\n\nif (isLoggedIn && user){\n  const userCommIDs = communities\n  .filter(c => c.members.includes(user.email))\n  .map(c => c._id);\n\n  //Splitting posts\n  const user_posts  = searchPosts.filter(p=>userCommIDs.includes(postToCommunity[p._id]));\n  const other_posts = searchPosts.filter(p=>!userCommIDs.includes(postToCommunity[p._id]));\n\n   //Sorting\n  var filteredUserPosts  = SortPosts({ array: user_posts,  type, comments });\n  var filteredOtherPosts = SortPosts({ array: other_posts, type, comments });\n\n} else{\n  //Sorting\n  var filteredPosts = SortPosts({array: searchPosts, type, comments});\n}\n\n  const handleClick = (order) => {\n    setType(order);\n  };\n\n\n  return (\n    <div id=\"searchbar_setup\">\n      <div id=\"search_wrapper\">\n        {isLoggedIn ? (<>{filteredUserPosts.length === 0 && filteredOtherPosts === 0 ? <h1 className=\"red_header\">No results found for: &quot;{searchQuery}&quot;</h1> : <h1 className=\"red_header\">Results for: &quot;{searchQuery}&quot;</h1>}</>):(<>{filteredPosts.length === 0 ? <h1 className=\"red_header\">No results found for: &quot;{searchQuery}&quot;</h1> : <h1 className=\"red_header\">Results for: &quot;{searchQuery}&quot;</h1>}</>)}\n        \n  \n        <div id=\"community_buttons\">\n            <button id=\"community_newest\" onClick={() => handleClick('newest')}>Newest</button>\n            <button id=\"community_oldest\" onClick={() => handleClick('oldest')}>Oldest</button>\n            <button id=\"community_active\" onClick={() => handleClick('active')}>Active</button>\n        </div>\n      </div>\n      \n      <div className=\"search_post_results\">\n        {isLoggedIn ? (<><h2>{filteredUserPosts.length + filteredOtherPosts.length} Posts found</h2></>) : (<><h2>{filteredPosts.length} Posts found</h2></>)}\n      </div>\n    \n     <hr/>\n     <div id=\"posts\">\n            {isLoggedIn ? (\n                        <><div id=\"posts\">\n                                {filteredUserPosts.map(post => (\n                                    <Post key={post._id} post={post} goToPostPage={goToPostPage} getCommunityName={getCommunityName} community={false} getCommentLength={getCommentLength} checkPostExists={checkPostExists}/>\n                                ))}\n                            </div><hr></hr><hr></hr><div id=\"posts\">\n                                    {filteredOtherPosts.map(post => (\n                                        <Post key={post._id} post={post} goToPostPage={goToPostPage} getCommunityName={getCommunityName} community={false} getCommentLength={getCommentLength} checkPostExists={checkPostExists}/>\n                                    ))}\n                                </div></>\n                    ):(\n                        <div id=\"posts\">\n                        {filteredPosts.map(post => (\n                            <Post key={post._id} post={post} goToPostPage={goToPostPage} getCommunityName={getCommunityName} community={false} getCommentLength={getCommentLength} checkPostExists={checkPostExists}/>\n                        ))}\n                        </div>\n                    )}\n        </div>\n\n    </div>\n  );\n}\n\nconst commentShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  commentedBy: PropTypes.string.isRequired,\n  commentedDate: PropTypes.instanceOf(Date).isRequired\n});\n\nconst postShape = PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    linkFlairID: PropTypes.string.isRequired,\n    postedBy: PropTypes.string.isRequired,\n    postedDate: PropTypes.instanceOf(Date).isRequired,\n    commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n    views: PropTypes.number.isRequired\n});\n\nSearchBar.propTypes = {\n  posts: PropTypes.arrayOf(postShape).isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  goToPostPage: PropTypes.func.isRequired,\n  getCommunityName: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf(commentShape).isRequired,\n  getCommentLength: PropTypes.func.isRequired\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}