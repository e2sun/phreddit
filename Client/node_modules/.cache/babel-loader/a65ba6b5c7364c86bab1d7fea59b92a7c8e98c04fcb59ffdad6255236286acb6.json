{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register({\n  createUser,\n  onCreateUserClick\n}) {\n  _s();\n  const [firstName, setFirst] = useState(\"\");\n  const [lastName, setLast] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [displayName, setName] = useState(\"\");\n  const [firstPassword, setFirstPassword] = useState(\"\");\n  const [secondPassword, setSecondPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (firstName === \"\") {\n      alert(\"First name is required\");\n      return;\n    }\n    if (lastName === \"\") {\n      alert(\"Last name is required\");\n      return;\n    }\n    if (email === \"\") {\n      alert(\"Email is required\");\n      return;\n    }\n    if (displayName === \"\") {\n      alert(\"Display Name is required\");\n      return;\n    }\n    if (firstPassword === \"\") {\n      alert(\"First Password is required\");\n      return;\n    }\n    if (secondPassword === \"\") {\n      alert(\"Second Password is required\");\n      return;\n    }\n    if (firstPassword != secondPassword) {\n      alert(\"Passwords do not match, please try again\");\n      return;\n    }\n\n    // Checking for a valid email\n    // used a common RegEx pattern for this from Geeks for Geeks\n    // https://www.geeksforgeeks.org/how-to-validate-email-address-using-regexp-in-javascript/\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(email)) {\n      alert(\"Please enter a valid email address.\");\n      return;\n    }\n\n    //Substring of email\n    const emailSub = email.split(\"@\")[0];\n\n    //Checking if password contains first or last name\n    const p = firstPassword.toLowerCase();\n    if (p.includes(firstName.toLowerCase())) {\n      alert(\"Password cannot contain your first name!\");\n      return;\n    } else if (p.includes(lastName.toLowerCase())) {\n      alert(\"Password cannot contain your last name!\");\n      return;\n    } else if (p.includes(displayName.toLowerCase())) {\n      alert(\"Password cannot contain your display name!\");\n      return;\n    } else if (p.includes(emailSub.toLowerCase())) {\n      alert(\"Password cannot contain your email!\");\n      return;\n    }\n    try {\n      await createUser({\n        firstName,\n        lastName,\n        email,\n        displayName,\n        password: firstPassword\n      });\n      alert(\"Your user has successfully been created\");\n      setFirst(\"\");\n      setLast(\"\");\n      setEmail(\"\");\n      setName(\"\");\n      setFirstPassword(\"\");\n      setSecondPassword(\"\");\n      onCreateUserClick();\n    } catch (err) {\n      const status = err.response.status;\n      const code = err.response.data.error;\n      if (status === 409) {\n        if (code === 'EMAIL_TAKEN') {\n          alert(\"There's already an account associated with that email\");\n        } else if (code === 'DISPLAYNAME_TAKEN') {\n          alert(\"That display name is already taken\");\n        } else {\n          console.error(\"Unexpected error creating user:\", err);\n          alert(\"Error creating user. Please try again later.\");\n        }\n      }\n    }\n  }; // ← fixed handleSubmit closure\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"register_new_user\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"create_phreddit\",\n      children: \"Create a Phreddit account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"register_user_form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"First name (required):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register_first_name\",\n        type: \"text\",\n        onChange: e => setFirst(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Last name (required):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register_last_name\",\n        type: \"text\",\n        onChange: e => setLast(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Email (required):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register_email\",\n        type: \"text\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Display Name (required):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register_display_name\",\n        type: \"text\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Password (required):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register_password_one\",\n        type: \"password\",\n        onChange: e => setFirstPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Re-type Password (required):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register_password_two\",\n        type: \"password\",\n        onChange: e => setSecondPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"register_user\",\n        type: \"submit\",\n        value: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"pvXs0tATHq5vFI1Kbl/BVDj2pY0=\");\n_c = Register;\nRegister.propTypes = {\n  createUser: PropTypes.func.isRequired,\n  onCreateUserClick: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Register","createUser","onCreateUserClick","_s","firstName","setFirst","lastName","setLast","email","setEmail","displayName","setName","firstPassword","setFirstPassword","secondPassword","setSecondPassword","handleSubmit","e","preventDefault","alert","emailRegex","test","emailSub","split","p","toLowerCase","includes","password","err","status","response","code","data","error","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","value","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/Register.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Register({createUser, onCreateUserClick}){\n    const [firstName, setFirst] = useState(\"\");\n    const [lastName, setLast] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [displayName, setName] = useState(\"\");\n    const [firstPassword, setFirstPassword] = useState(\"\");\n    const [secondPassword, setSecondPassword] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if(firstName === \"\"){\n            alert(\"First name is required\");\n            return;\n        }\n        if(lastName === \"\"){\n            alert(\"Last name is required\");\n            return;\n        }\n        if(email === \"\") {\n            alert(\"Email is required\");\n            return;\n        }\n        if(displayName === \"\"){\n            alert(\"Display Name is required\");\n            return;\n        }\n        if(firstPassword === \"\"){\n            alert(\"First Password is required\");\n            return;\n        }\n        if(secondPassword === \"\"){\n            alert(\"Second Password is required\");\n            return;\n        }\n        if(firstPassword != secondPassword){\n            alert(\"Passwords do not match, please try again\");\n            return;\n        }\n        \n        // Checking for a valid email\n        // used a common RegEx pattern for this from Geeks for Geeks\n        // https://www.geeksforgeeks.org/how-to-validate-email-address-using-regexp-in-javascript/\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n        if(!emailRegex.test(email)){\n            alert(\"Please enter a valid email address.\");\n            return;\n        }\n\n        //Substring of email\n        const emailSub = email.split(\"@\")[0];\n        \n\n        //Checking if password contains first or last name\n        const p = firstPassword.toLowerCase();\n        if (p.includes(firstName.toLowerCase())){\n            alert(\"Password cannot contain your first name!\");\n            return;\n        } else if (p.includes(lastName.toLowerCase())){\n            alert(\"Password cannot contain your last name!\");\n            return;\n        } else if (p.includes(displayName.toLowerCase())){\n            alert(\"Password cannot contain your display name!\");\n            return;\n        } else if (p.includes(emailSub.toLowerCase())){\n            alert(\"Password cannot contain your email!\");\n            return;\n        }\n\n        try {\n            await createUser({\n                firstName,\n                lastName,\n                email,\n                displayName,\n                password: firstPassword\n            });\n\n            alert(\"Your user has successfully been created\");\n            setFirst(\"\");\n            setLast(\"\");\n            setEmail(\"\");\n            setName(\"\");\n            setFirstPassword(\"\");\n            setSecondPassword(\"\");\n\n            onCreateUserClick();\n\n        } catch (err) {\n            const status = err.response.status;\n            const code   = err.response.data.error;\n\n            if (status === 409) {\n                if (code === 'EMAIL_TAKEN') {\n                    alert(\"There's already an account associated with that email\");\n                } else if (code === 'DISPLAYNAME_TAKEN') {\n                    alert(\"That display name is already taken\");\n                } else {\n                    console.error(\"Unexpected error creating user:\", err);\n                    alert(\"Error creating user. Please try again later.\");\n                }\n            }\n        }\n    };  // ← fixed handleSubmit closure\n\n    return (\n        <div id=\"register_new_user\">\n            <div id=\"create_phreddit\">Create a Phreddit account</div>\n            <form id=\"register_user_form\" onSubmit={handleSubmit}>\n                <h3>First name (required):</h3>\n                <input id=\"register_first_name\" type=\"text\" onChange={(e) => setFirst(e.target.value)}/>\n                <h3>Last name (required):</h3>\n                <input id=\"register_last_name\" type=\"text\" onChange={(e) => setLast(e.target.value)}/>\n                <h3>Email (required):</h3>\n                <input id=\"register_email\" type=\"text\" onChange={(e) => setEmail(e.target.value)}/>\n                <h3>Display Name (required):</h3>\n                <input id=\"register_display_name\" type=\"text\" onChange={(e) => setName(e.target.value)}/>\n                <h3>Password (required):</h3>\n                <input id=\"register_password_one\" type=\"password\" onChange={(e) => setFirstPassword(e.target.value)}/>\n                <h3>Re-type Password (required):</h3>\n                <input id=\"register_password_two\" type=\"password\" onChange={(e) => setSecondPassword(e.target.value)}/>\n                <input id=\"register_user\" type=\"submit\" value=\"Sign Up\"/>\n            </form>\n        </div>\n    );\n}\n\nRegister.propTypes = {\n    createUser: PropTypes.func.isRequired,\n    onCreateUserClick: PropTypes.func.isRequired\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,QAAQA,CAAC;EAACC,UAAU;EAAEC;AAAiB,CAAC,EAAC;EAAAC,EAAA;EAC7D,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMoB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAGd,SAAS,KAAK,EAAE,EAAC;MAChBe,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACJ;IACA,IAAGb,QAAQ,KAAK,EAAE,EAAC;MACfa,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACJ;IACA,IAAGX,KAAK,KAAK,EAAE,EAAE;MACbW,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACJ;IACA,IAAGT,WAAW,KAAK,EAAE,EAAC;MAClBS,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACJ;IACA,IAAGP,aAAa,KAAK,EAAE,EAAC;MACpBO,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ;IACA,IAAGL,cAAc,KAAK,EAAE,EAAC;MACrBK,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IACA,IAAGP,aAAa,IAAIE,cAAc,EAAC;MAC/BK,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACJ;;IAEA;IACA;IACA;IACA,MAAMC,UAAU,GAAG,kDAAkD;IAErE,IAAG,CAACA,UAAU,CAACC,IAAI,CAACb,KAAK,CAAC,EAAC;MACvBW,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACJ;;IAEA;IACA,MAAMG,QAAQ,GAAGd,KAAK,CAACe,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAGpC;IACA,MAAMC,CAAC,GAAGZ,aAAa,CAACa,WAAW,CAAC,CAAC;IACrC,IAAID,CAAC,CAACE,QAAQ,CAACtB,SAAS,CAACqB,WAAW,CAAC,CAAC,CAAC,EAAC;MACpCN,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACJ,CAAC,MAAM,IAAIK,CAAC,CAACE,QAAQ,CAACpB,QAAQ,CAACmB,WAAW,CAAC,CAAC,CAAC,EAAC;MAC1CN,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACJ,CAAC,MAAM,IAAIK,CAAC,CAACE,QAAQ,CAAChB,WAAW,CAACe,WAAW,CAAC,CAAC,CAAC,EAAC;MAC7CN,KAAK,CAAC,4CAA4C,CAAC;MACnD;IACJ,CAAC,MAAM,IAAIK,CAAC,CAACE,QAAQ,CAACJ,QAAQ,CAACG,WAAW,CAAC,CAAC,CAAC,EAAC;MAC1CN,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACJ;IAEA,IAAI;MACA,MAAMlB,UAAU,CAAC;QACbG,SAAS;QACTE,QAAQ;QACRE,KAAK;QACLE,WAAW;QACXiB,QAAQ,EAAEf;MACd,CAAC,CAAC;MAEFO,KAAK,CAAC,yCAAyC,CAAC;MAChDd,QAAQ,CAAC,EAAE,CAAC;MACZE,OAAO,CAAC,EAAE,CAAC;MACXE,QAAQ,CAAC,EAAE,CAAC;MACZE,OAAO,CAAC,EAAE,CAAC;MACXE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,iBAAiB,CAAC,EAAE,CAAC;MAErBb,iBAAiB,CAAC,CAAC;IAEvB,CAAC,CAAC,OAAO0B,GAAG,EAAE;MACV,MAAMC,MAAM,GAAGD,GAAG,CAACE,QAAQ,CAACD,MAAM;MAClC,MAAME,IAAI,GAAKH,GAAG,CAACE,QAAQ,CAACE,IAAI,CAACC,KAAK;MAEtC,IAAIJ,MAAM,KAAK,GAAG,EAAE;QAChB,IAAIE,IAAI,KAAK,aAAa,EAAE;UACxBZ,KAAK,CAAC,uDAAuD,CAAC;QAClE,CAAC,MAAM,IAAIY,IAAI,KAAK,mBAAmB,EAAE;UACrCZ,KAAK,CAAC,oCAAoC,CAAC;QAC/C,CAAC,MAAM;UACHe,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEL,GAAG,CAAC;UACrDT,KAAK,CAAC,8CAA8C,CAAC;QACzD;MACJ;IACJ;EACJ,CAAC,CAAC,CAAE;;EAEJ,oBACIpB,OAAA;IAAKoC,EAAE,EAAC,mBAAmB;IAAAC,QAAA,gBACvBrC,OAAA;MAAKoC,EAAE,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzDzC,OAAA;MAAMoC,EAAE,EAAC,oBAAoB;MAACM,QAAQ,EAAEzB,YAAa;MAAAoB,QAAA,gBACjDrC,OAAA;QAAAqC,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BzC,OAAA;QAAOoC,EAAE,EAAC,qBAAqB;QAACO,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAG1B,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxFzC,OAAA;QAAAqC,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BzC,OAAA;QAAOoC,EAAE,EAAC,oBAAoB;QAACO,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAG1B,CAAC,IAAKV,OAAO,CAACU,CAAC,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtFzC,OAAA;QAAAqC,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BzC,OAAA;QAAOoC,EAAE,EAAC,gBAAgB;QAACO,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAG1B,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnFzC,OAAA;QAAAqC,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCzC,OAAA;QAAOoC,EAAE,EAAC,uBAAuB;QAACO,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAG1B,CAAC,IAAKN,OAAO,CAACM,CAAC,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzFzC,OAAA;QAAAqC,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BzC,OAAA;QAAOoC,EAAE,EAAC,uBAAuB;QAACO,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAG1B,CAAC,IAAKJ,gBAAgB,CAACI,CAAC,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtGzC,OAAA;QAAAqC,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCzC,OAAA;QAAOoC,EAAE,EAAC,uBAAuB;QAACO,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAG1B,CAAC,IAAKF,iBAAiB,CAACE,CAAC,CAAC2B,MAAM,CAACC,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvGzC,OAAA;QAAOoC,EAAE,EAAC,eAAe;QAACO,IAAI,EAAC,QAAQ;QAACG,KAAK,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACrC,EAAA,CA7HuBH,QAAQ;AAAA8C,EAAA,GAAR9C,QAAQ;AA+HhCA,QAAQ,CAAC+C,SAAS,GAAG;EACjB9C,UAAU,EAAEJ,SAAS,CAACmD,IAAI,CAACC,UAAU;EACrC/C,iBAAiB,EAAEL,SAAS,CAACmD,IAAI,CAACC;AACtC,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}