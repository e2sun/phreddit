{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/CommunityPage.jsx\",\n  _s = $RefreshSig$();\nimport Post from './Post.jsx';\nimport TimeStamps from './TimeStamps.jsx';\nimport ParseDescription from './ParseDescription.jsx';\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SortPosts from './SortPosts.jsx';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\nfunction CommunityPage({\n  community,\n  getPosts,\n  goToPostPage,\n  getCommunityName,\n  comments,\n  getCommentLength,\n  isLoggedIn,\n  buttonTrigger,\n  handleError,\n  checkPostExists\n}) {\n  _s();\n  const [type, setType] = useState('newest');\n  const [isMember, setMemberStatus] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [memberCount, setMemberCount] = useState(community.memberCount);\n  useEffect(() => {\n    const fetchCommunityData = async () => {\n      try {\n        if (isLoggedIn) {\n          const response = await axios.get(`/member/${community._id}`, {\n            withCredentials: true\n          });\n          setMemberStatus(response.data.isMember);\n        }\n        const postArray = await axios.get(`/communityPosts/${community._id}`);\n        setPosts(postArray.data);\n        setMemberCount(community.memberCount);\n      } catch (err) {\n        console.error(\"Error fetching community data:\", err);\n        handleError(err);\n      }\n    };\n    setType('newest');\n    fetchCommunityData();\n  }, [community._id, isLoggedIn]);\n  const leaveCommunity = async e => {\n    e.preventDefault();\n    try {\n      const newMemberCount = await axios.post(`/leaveCommunity/${community._id}`);\n      setMemberCount(newMemberCount.data);\n      setMemberStatus(false);\n      buttonTrigger(prev => prev + 1);\n    } catch (err) {\n      console.error('Error leaving the community');\n      handleError(err);\n    }\n  };\n  const joinCommunity = async e => {\n    e.preventDefault();\n    try {\n      const newMemberCount = await axios.post(`/joinCommunity/${community._id}`);\n      setMemberCount(newMemberCount.data);\n      setMemberStatus(true);\n      buttonTrigger(prev => prev + 1);\n    } catch (err) {\n      console.error('Error joining the community');\n      handleError(err);\n    }\n  };\n  const communityArray = SortPosts({\n    array: posts,\n    type,\n    comments\n  });\n  const handleClick = order => {\n    setType(order);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"communitypage_setup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"community_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community_view_name\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: community.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community_newest\",\n          onClick: () => handleClick('newest'),\n          children: \"Newest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community_oldest\",\n          onClick: () => handleClick('oldest'),\n          children: \"Oldest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"community_active\",\n          onClick: () => handleClick('active'),\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"community_description\",\n      children: /*#__PURE__*/_jsxDEV(ParseDescription, {\n        description: community.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"community_timestamp\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created \", /*#__PURE__*/_jsxDEV(TimeStamps, {\n          date: community.startDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }, this), \" by \", community.creator]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"numberOfPosts\",\n      children: [\" \", communityArray.length, \" post(s) | \", memberCount, \" member(s)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isMember ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"join_leave\",\n        onClick: leaveCommunity,\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"join_leave\",\n        onClick: joinCommunity,\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    // <p id=\"numberOfPosts\"> {communityArray.length} post(s)</p>\n    , /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"community_posts\",\n      children: communityArray.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        goToPostPage: goToPostPage,\n        getCommunityName: getCommunityName,\n        community: true,\n        getCommentLength: getCommentLength,\n        checkPostExists: checkPostExists\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunityPage, \"VRhXpsXlTa+mvX355FoA8bEkgsw=\");\n_c = CommunityPage;\nexport default CommunityPage;\nconst commentShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  commentedBy: PropTypes.string.isRequired,\n  commentedDate: PropTypes.instanceOf(Date).isRequired\n});\nconst communityShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  postIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  startDate: PropTypes.instanceOf(Date).isRequired,\n  members: PropTypes.arrayOf(PropTypes.string).isRequired,\n  memberCount: PropTypes.number.isRequired\n});\nCommunityPage.propTypes = {\n  community: communityShape.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  goToPostPage: PropTypes.func.isRequired,\n  getCommunityName: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf(commentShape).isRequired,\n  getCommentLength: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  buttonTrigger: PropTypes.func.isRequired,\n  handleError: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"CommunityPage\");","map":{"version":3,"names":["Post","TimeStamps","ParseDescription","React","useState","useEffect","PropTypes","SortPosts","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","defaults","baseURL","CommunityPage","community","getPosts","goToPostPage","getCommunityName","comments","getCommentLength","isLoggedIn","buttonTrigger","handleError","checkPostExists","_s","type","setType","isMember","setMemberStatus","posts","setPosts","memberCount","setMemberCount","fetchCommunityData","response","get","_id","withCredentials","data","postArray","err","console","error","leaveCommunity","e","preventDefault","newMemberCount","post","prev","joinCommunity","communityArray","array","handleClick","order","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","date","startDate","creator","length","map","_c","commentShape","shape","string","isRequired","content","commentIDs","arrayOf","commentedBy","commentedDate","instanceOf","Date","communityShape","postIDs","members","number","propTypes","func","bool","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/CommunityPage.jsx"],"sourcesContent":["import Post from './Post.jsx';\nimport TimeStamps from './TimeStamps.jsx';\nimport ParseDescription from './ParseDescription.jsx';\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SortPosts from './SortPosts.jsx';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:8000';\n\nfunction CommunityPage({\n  community,\n  getPosts,\n  goToPostPage,\n  getCommunityName,\n  comments,\n  getCommentLength,\n  isLoggedIn,\n  buttonTrigger,\n  handleError,\n  checkPostExists\n}) {\n  const [type, setType] = useState('newest');\n  const [isMember, setMemberStatus] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [memberCount, setMemberCount] = useState(community.memberCount);\n\n  useEffect(() => {\n    const fetchCommunityData = async () => {\n      try {\n        if (isLoggedIn) {\n          const response = await axios.get(`/member/${community._id}`, {\n            withCredentials: true\n          });\n          setMemberStatus(response.data.isMember);\n        }\n        const postArray = await axios.get(`/communityPosts/${community._id}`);\n        setPosts(postArray.data);\n\n        setMemberCount(community.memberCount);\n      } catch (err) {\n        console.error(\"Error fetching community data:\", err);\n        handleError(err);\n      }\n    };\n\n    setType('newest');\n    fetchCommunityData();\n  }, [community._id, isLoggedIn]);\n\n  const leaveCommunity = async (e) => {\n    e.preventDefault();\n    try {\n      const newMemberCount = await axios.post(`/leaveCommunity/${community._id}`);\n      setMemberCount(newMemberCount.data);\n      setMemberStatus(false);\n      buttonTrigger(prev => prev + 1);\n    } catch (err) {\n      console.error('Error leaving the community');\n      handleError(err);\n    }\n  };\n\n  const joinCommunity = async (e) => {\n    e.preventDefault();\n    try {\n      const newMemberCount = await axios.post(`/joinCommunity/${community._id}`);\n      setMemberCount(newMemberCount.data);\n      setMemberStatus(true);\n      buttonTrigger(prev => prev + 1);\n    } catch (err) {\n      console.error('Error joining the community');\n      handleError(err);\n    }\n  };\n\n  const communityArray = SortPosts({ array: posts, type, comments });\n\n  const handleClick = (order) => {\n    setType(order);\n  };\n\n  return (\n    <div id=\"communitypage_setup\">\n      <div id=\"community_wrapper\">\n        <div id=\"community_view_name\">\n          <h1>{community.name}</h1>\n        </div>\n        <div id=\"community_buttons\">\n          <button id=\"community_newest\" onClick={() => handleClick('newest')}>Newest</button>\n          <button id=\"community_oldest\" onClick={() => handleClick('oldest')}>Oldest</button>\n          <button id=\"community_active\" onClick={() => handleClick('active')}>Active</button>\n        </div>\n      </div>\n\n      <div id=\"community_description\">\n        <ParseDescription description={community.description} />\n      </div>\n      <div id=\"community_timestamp\">\n        <p>Created <TimeStamps date={community.startDate} /> by {community.creator}</p>\n      </div>\n      <p id=\"numberOfPosts\"> {communityArray.length} post(s) | {memberCount} member(s)</p>\n\n      {isLoggedIn ? (\n        <>\n          {isMember ? (\n            <button id=\"join_leave\" onClick={leaveCommunity}>Leave</button>\n          ) : (\n            <button id=\"join_leave\" onClick={joinCommunity}>Join</button>\n          )}\n        </>\n      ) : (\n        <></>\n        // <p id=\"numberOfPosts\"> {communityArray.length} post(s)</p>\n      )}\n\n      <hr />\n      <div id=\"community_posts\">\n        {communityArray.map(post => (\n          <Post\n            key={post._id}\n            post={post}\n            goToPostPage={goToPostPage}\n            getCommunityName={getCommunityName}\n            community={true}\n            getCommentLength={getCommentLength}\n            checkPostExists={checkPostExists}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CommunityPage;\n\nconst commentShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  commentedBy: PropTypes.string.isRequired,\n  commentedDate: PropTypes.instanceOf(Date).isRequired\n});\n\nconst communityShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  postIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n  startDate: PropTypes.instanceOf(Date).isRequired,\n  members: PropTypes.arrayOf(PropTypes.string).isRequired,\n  memberCount: PropTypes.number.isRequired\n});\n\nCommunityPage.propTypes = {\n  community: communityShape.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  goToPostPage: PropTypes.func.isRequired,\n  getCommunityName: PropTypes.func.isRequired,\n  comments: PropTypes.arrayOf(commentShape).isRequired,\n  getCommentLength: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  buttonTrigger: PropTypes.func.isRequired,\n  handleError: PropTypes.func.isRequired\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}