{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/phreddit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Banner from './Banner';\nimport Navbar from './Navbar';\nimport HomePage from './HomePage';\nimport NewPost from './NewPost';\nimport NewCommunity from './NewCommunity';\nimport NewComment from './NewComment';\nimport PostPage from './PostPage';\nimport CommunityPage from './CommunityPage';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport Welcome from './Welcome';\nimport Login from './Login';\nimport Register from './Register';\nimport UserProfile from './UserProfile';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = 'http://localhost:8000';\nexport default function Phreddit() {\n  _s();\n  // Common use constants and arrays\n  // const [communities, setCommunities] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [linkFlairs, setLinkFlairs] = useState([]);\n  const [redPost, setPostButton] = useState(false);\n  const [redHome, setHomeButton] = useState(false);\n  const [redCommunity, setCommunityButton] = useState(false);\n  const [redCommunityLink, setCommunityLink] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentComment, setCurrentComment] = useState(null);\n  const [tempUser, setTempUser] = useState(null);\n  const [searchTrigger, setSearchTrigger] = useState(0);\n\n  // Set states\n  const [view, setView] = useState('welcome'); // view can be homepage, post, newpost, newcommunity, newcomment, search, community\n  const [currentPost, setCurrentPost] = useState(null);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [replyTo, setReplyTo] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [buttonTrigger, setButtonTrigger] = useState(0);\n  useEffect(() => {\n    //Call get method of post and fill the array\n    axios.get(\"/posts\").then(res => {\n      setPosts(res.data);\n    }).catch(err => {\n      console.log(\"Request failed to get posts\");\n      handleError(err);\n    });\n    // axios.get(\"/communities\")\n    // .then((res) => {\n    //     setCommunities(res.data);\n    // })\n    // .catch((err) => {\n    //     console.log(\"Request failed to get communities\");\n    //     handleError(err);\n    // });\n    axios.get(\"/comments\").then(res => {\n      setComments(res.data);\n    }).catch(err => {\n      console.log(\"Request failed to get comments\");\n      handleError(err);\n    });\n    axios.get(\"/linkflairs\").then(res => {\n      setLinkFlairs(res.data);\n    }).catch(err => {\n      console.log(\"Request failed to get linkflairs\");\n      handleError(err);\n    });\n  }, []);\n  useEffect(() => {\n    async function checkLoggedIn() {\n      try {\n        const status = await axios.get(\"/check_login\", {\n          withCredentials: true\n        });\n        console.log(\"STATUS:\", status);\n        if (status.status === 200) {\n          const response = await axios.get(\"/userProfile\", {\n            withCredentials: true\n          });\n          setCurrentUser(response.data);\n          setIsLoggedIn(true);\n        } else {\n          setIsLoggedIn(false);\n          setCurrentUser(null);\n        }\n        return;\n      } catch (err) {\n        if (err.response && err.response.status === 401) {\n          setIsLoggedIn(false);\n          setCurrentUser(null);\n        } else {\n          console.error(\"Error checking if user is logged in: \", err);\n          handleError(err);\n        }\n      }\n    }\n    checkLoggedIn();\n  }, []);\n  useEffect(() => {\n    const userInteraction = () => {\n      setButtonTrigger(prev => prev + 1);\n    };\n    window.addEventListener('click', userInteraction);\n    window.addEventListener('keydown', userInteraction);\n    return () => {\n      window.removeEventListener('click', userInteraction);\n      window.removeEventListener('keydown', userInteraction);\n    };\n  });\n  const goToHomepage = () => {\n    // axios.get(\"/communities\") // Reget all of the communities so state will update everytime the state is updated\n    // .then((res) => {\n    //     setCommunities(res.data);\n    // })\n    // .catch((err) => {\n    //     console.log(\"Request failed\");\n    //     handleError(err);\n    // });\n\n    axios.get(\"/linkflairs\") // Reget all of the posts so state will update everytime the state is updated\n    .then(res => {\n      setLinkFlairs(res.data);\n    }).catch(err => {\n      console.log(\"Request failed\");\n      handleError(err);\n    });\n    setHomeButton(true);\n    setPostButton(false);\n    setCommunityButton(false);\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n    setView(\"homepage\");\n    console.log(\"Homepage\");\n  };\n  const goToPostPage = post => {\n    axios.put(`/post/${post._id}`, post).then(res => {\n      setHomeButton(false);\n      setPostButton(false);\n      setCommunityButton(false);\n      setView(\"postpage\");\n      setCurrentPost(res.data);\n      console.log(\"Post Page\");\n      setCommunityLink(false);\n      setSelectedCommunity(null);\n    }).catch(err => {\n      handleError(err);\n      throw err;\n    });\n  };\n  const goToNewPost = () => {\n    axios.get(\"/linkflairs\") // Reget all of the posts so state will update everytime the state is updated\n    .then(res => {\n      setLinkFlairs(res.data);\n    }).catch(err => {\n      console.log(\"Request failed\");\n      handleError(err);\n    });\n    setHomeButton(false);\n    setPostButton(true);\n    setCommunityButton(false);\n    setView(\"newPost\");\n    console.log(\"New Post Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToNewComment = object => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"newComment\");\n    setReplyTo(object);\n    console.log(\"New Comment Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToSearch = searchQuery => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setSearchQuery(searchQuery);\n    setView(\"search\");\n    console.log(\"Search Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n    setSearchTrigger(prev => prev + 1);\n  };\n  const goToWelcome = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"welcome\");\n    console.log(\"Welcome Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToWentWrong = () => {\n    if (isLoggedIn) {\n      onLogout();\n    } else {\n      goToWelcome();\n    }\n  };\n  const goToLogin = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(true);\n    setView(\"login\");\n    console.log(\"Login Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToRegister = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(true);\n    setView(\"register\");\n    console.log(\"Register Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToNewCommunity = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(true);\n    setView(\"newCommunity\");\n    console.log(\"New Community Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToCommunity = community => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"community\");\n    setSelectedCommunity(community);\n    console.log(community);\n    console.log(\"Community Page\");\n    setCommunityLink(true);\n  };\n  const goToUserProfile = user => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"user profile\");\n    if (user) {\n      setCurrentUser(user);\n    }\n    console.log(user);\n    console.log(\"User Profile Page\");\n    setCommunityLink(true);\n  };\n  const onCommunityEdit = community => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"edit community\");\n    setSelectedCommunity(community);\n    console.log(community);\n    console.log(\"Edit Community Page\");\n    setCommunityLink(false);\n  };\n  const onCommentEdit = comment => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"edit comment\");\n    setCurrentComment(comment);\n    console.log(comment);\n    console.log(\"Edit Comment Page\");\n    setCommunityLink(false);\n  };\n  const onPostEdit = post => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"edit post\");\n    setCurrentPost(post);\n    console.log(post);\n    console.log(\"Edit Post Page\");\n    setCommunityLink(false);\n  };\n  const handleError = error => {\n    console.error(\"Handling error:\", error);\n    setView('error');\n  };\n\n  // When button is clicked, go to Admin page and set view \n  const onAdminClick = user => {\n    setTempUser(user);\n    setView(\"sub user profile\");\n    console.log(\"working\");\n  };\n\n  //Add data to model\n  const addCommunity = community => {\n    axios.post('/new_community', community).then(() => {\n      // Re-fetch the entire updated list after the new one is saved\n      setButtonTrigger(prev => prev + 1);\n      return axios.get('/communities');\n    }).then(res => {\n      //  setCommunities(res.data);\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error adding community\", err);\n      handleError(err);\n    });\n  };\n  const addComments = comment => {\n    axios.post('/new_comment', comment).then(() => {\n      // update the comments state by re-fetching comments\n      return axios.get('/comments');\n    }).then(res => {\n      setComments(res.data);\n      // re-fetch posts so the new comment's ID is in the post's commentIDs array\n      return axios.get('/posts');\n    }).then(res => {\n      const updatedPost = res.data.find(p => p._id === currentPost._id);\n      goToPostPage(updatedPost);\n    }).catch(err => {\n      console.error(\"Error adding comment\", err);\n      handleError(err);\n    });\n  };\n  const createUser = user => {\n    return axios.post('/new_user', user).catch(err => {\n      handleError(err);\n      throw err;\n    });\n  };\n\n  // const addLinkFlairs = (linkFlair)=>{\n  //   modelInstance.data.linkFlairs.push(linkFlair);\n  //   setLinkFlairs(modelInstance.data.linkFlairs);\n  // }\n\n  // getters\n  // const getCommunityName = (currentPostID) => {\n  //   const community = communities.find(community => community.postIDs.includes(currentPostID));\n\n  //   if (community) {\n  //     return community.name;\n  //   } else {\n  //     return 'FIX THIS';\n  //   }\n  // }\n\n  const getCommunityName = async currentPostID => {\n    try {\n      const valid = await checkPostExists(currentPostID);\n      if (!valid) {\n        return \"DELETED\";\n      }\n      // working\n      const result = await axios.get(`/getCommunityByPost/${currentPostID}`);\n      return result.data.communityName;\n    } catch (err) {\n      console.error(\"Error fetching community for post:\", err);\n      handleError(err);\n    }\n  };\n  const getLinkFlair = currentLinkFlairID => {\n    const linkFlair = linkFlairs.find(linkFlair => linkFlair._id === currentLinkFlairID);\n    return linkFlair ? linkFlair.content : \"\";\n  };\n  const getCommentLength = (commentArray = []) => {\n    let commentCount = 0;\n    const countAll = commentArray => {\n      commentArray.forEach(commentID => {\n        commentCount++;\n        const currentComment = comments.find(comment => comment._id === commentID);\n        console.log(\"Comments:\", comments);\n        console.log(\"COMMENT ID:\", commentID);\n        // if(currentComment.commentIDs.length !== 0){\n        //   countAll(currentComment.commentIDs);\n        // }\n\n        if (currentComment !== null && currentComment !== void 0 && currentComment.commentIDs && Array.isArray(currentComment.commentIDs)) {\n          countAll(currentComment.commentIDs);\n        }\n      });\n    };\n    countAll(commentArray);\n    return commentCount;\n  };\n  function addNewPost(post) {\n    console.log(\"📝 addNewPost called with:\", post);\n    axios.post('/new_post', post, {\n      withCredentials: true\n    }).then(() => axios.get(\"/posts\")).then(res => {\n      console.log(\"fetched posts:\", res.data.length);\n      setPosts(res.data);\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error adding new post\", err);\n      handleError(err);\n    });\n  }\n  function editPost(newPost, post) {\n    console.log(\"📝 editPost called with:\", post);\n    axios.put(`/editPost/${post._id}`, newPost, {\n      withCredentials: true\n    }).then(() => axios.get(\"/posts\")).then(res => {\n      console.log(\"fetched posts:\", res.data.length);\n      setPosts(res.data);\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error editing post\", err);\n      handleError(err);\n    });\n  }\n  function deletePost(post) {\n    axios.delete(`/deletePost/${post._id}`, {\n      withCredentials: true\n    }).then(() => axios.get(\"/posts\")).then(res => {\n      setPosts(res.data);\n      localStorage.setItem('postsUpdated', Date.now());\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error deleting post\", err);\n      handleError(err);\n    });\n  }\n  const checkPostExists = async postId => {\n    try {\n      const res = await axios.get(`/postExist/${postId}`);\n      return res.data;\n    } catch (err) {\n      console.error('Error checking post status', err);\n      handleError(err);\n      return false;\n    }\n  };\n  function editComment(newComment, comment) {\n    console.log(\"editComment called with:\", comment);\n    axios.put(`/editComment/${comment._id}`, newComment, {\n      withCredentials: true\n    }).then(() => axios.get(\"/comments\")).then(res => {\n      console.log(\"fetched comments:\", res.data.length);\n      setComments(res.data);\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error editing comment\", err);\n      handleError(err);\n    });\n  }\n  function deleteComment(comment) {\n    axios.delete(`/deleteComment/${comment._id}`, {\n      withCredentials: true\n    }).then(() => axios.get(\"/comments\")).then(res => {\n      setComments(res.data);\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error deleting comment\", err);\n      handleError(err);\n    });\n  }\n  function editCommunity(newCommunity, community) {\n    console.log(\"editCommunity called with:\", community);\n    axios.put(`/editCommunity/${community._id}`, newCommunity, {\n      withCredentials: true\n    }).then(() => axios.get(\"/communities\")).then(res => {\n      console.log(\"fetched communities:\", res.data.length);\n      // setCommunities(res.data);\n      setButtonTrigger(prev => prev + 1);\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error editing community\", err);\n      handleError(err);\n    });\n  }\n  function deleteCommunity(community) {\n    axios.delete(`/deleteCommunity/${community._id}`, {\n      withCredentials: true\n    }).then(() => axios.get(\"/communities\")).then(res => {\n      // setCommunities(res.data);\n      setButtonTrigger(prev => prev + 1);\n      goToHomepage();\n    }).catch(err => {\n      console.error(\"Error deleting community\", err);\n      handleError(err);\n    });\n  }\n  function getPosts(community) {\n    const communityArray = [];\n    const communityPostIDs = community.postIDs;\n    communityPostIDs.forEach(postID => {\n      const thisPost = posts.find(post => post._id === postID);\n      communityArray.push(thisPost);\n    });\n    return communityArray;\n  }\n  function onLogout() {\n    axios.post('/logout', {\n      withCredentials: true\n    }).then(() => {\n      setIsLoggedIn(false);\n      setCurrentUser(null);\n      goToWelcome();\n    }).catch(err => {\n      alert('Logout failed. Please try again.');\n      console.error('Logout failed:', err);\n      handleError(err);\n    });\n  }\n\n  //determine main content based on view\n  let mainContent;\n  switch (view) {\n    case \"homepage\":\n      mainContent = /*#__PURE__*/_jsxDEV(HomePage, {\n        goToPostPage: goToPostPage,\n        getCommunityName: getCommunityName,\n        getCommentLength: getCommentLength,\n        isLoggedIn: isLoggedIn,\n        handleError: handleError,\n        checkPostExists: checkPostExists,\n        buttonTrigger: buttonTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"postpage\":\n      mainContent = /*#__PURE__*/_jsxDEV(PostPage, {\n        post: currentPost,\n        getLinkFlair: getLinkFlair,\n        getCommentLength: getCommentLength,\n        goToNewComment: goToNewComment,\n        isLoggedIn: isLoggedIn,\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"newPost\":\n      mainContent = /*#__PURE__*/_jsxDEV(NewPost, {\n        addNewPost: addNewPost,\n        linkFlairs: linkFlairs,\n        user: currentUser,\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"edit post\":\n      mainContent = /*#__PURE__*/_jsxDEV(NewPost, {\n        addNewPost: addNewPost,\n        linkFlairs: linkFlairs,\n        user: currentUser,\n        isEdit: true,\n        isDelete: true,\n        post: currentPost,\n        editPost: editPost,\n        onDelete: deletePost,\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"newCommunity\":\n      mainContent = /*#__PURE__*/_jsxDEV(NewCommunity, {\n        addCommunity: addCommunity,\n        onCreateCommunityClick: goToHomepage,\n        user: currentUser,\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"edit community\":\n      mainContent = /*#__PURE__*/_jsxDEV(NewCommunity, {\n        addCommunity: addCommunity,\n        onCreateCommunityClick: goToHomepage,\n        user: currentUser,\n        isEdit: true,\n        community: selectedCommunity,\n        editCommunity: editCommunity,\n        onDelete: deleteCommunity,\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"newComment\":\n      mainContent = /*#__PURE__*/_jsxDEV(NewComment, {\n        object: replyTo,\n        onCommentAdded: addComments,\n        user: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"edit comment\":\n      mainContent = /*#__PURE__*/_jsxDEV(NewComment, {\n        object: currentComment,\n        onCommentAdded: addComments,\n        user: currentUser,\n        isEdit: true,\n        comment: currentComment,\n        editComment: editComment,\n        onDelete: deleteComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"search\":\n      mainContent = /*#__PURE__*/_jsxDEV(SearchBar, {\n        searchQuery: searchQuery,\n        goToPostPage: goToPostPage,\n        getCommunityName: getCommunityName,\n        getCommentLength: getCommentLength,\n        isLoggedIn: isLoggedIn,\n        handleError: handleError,\n        searchTrigger: searchTrigger,\n        checkPostExists: checkPostExists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"community\":\n      mainContent = /*#__PURE__*/_jsxDEV(CommunityPage, {\n        community: selectedCommunity,\n        getPosts: getPosts,\n        goToPostPage: goToPostPage,\n        getCommunityName: getCommunityName,\n        comments: comments,\n        getCommentLength: getCommentLength,\n        isLoggedIn: isLoggedIn,\n        buttonTrigger: setButtonTrigger,\n        handleError: handleError,\n        checkPostExists: checkPostExists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"welcome\":\n      if (isLoggedIn) {\n        goToHomepage();\n        return;\n      } else {\n        mainContent = /*#__PURE__*/_jsxDEV(Welcome, {\n          goToLoginPage: goToLogin,\n          goToRegister: goToRegister,\n          goToHomepage: goToHomepage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 9\n        }, this);\n      }\n      break;\n    case \"register\":\n      mainContent = /*#__PURE__*/_jsxDEV(Register, {\n        createUser: createUser,\n        onCreateUserClick: goToWelcome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"login\":\n      mainContent = /*#__PURE__*/_jsxDEV(Login, {\n        onLoginSuccess: user => {\n          setIsLoggedIn(true);\n          setCurrentUser(user);\n          goToHomepage();\n        },\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"user profile\":\n      mainContent = /*#__PURE__*/_jsxDEV(UserProfile, {\n        goToPostPage: goToPostPage,\n        getCommunityName: getCommunityName,\n        getCommentLength: getCommentLength,\n        onCommunityEdit: onCommunityEdit,\n        onPostEdit: onPostEdit,\n        onCommentEdit: onCommentEdit,\n        onAdminClick: onAdminClick,\n        handleError: handleError,\n        setButtonTrigger: setButtonTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"sub user profile\":\n      mainContent = /*#__PURE__*/_jsxDEV(UserProfile, {\n        goToPostPage: goToPostPage,\n        getCommunityName: getCommunityName,\n        getCommentLength: getCommentLength,\n        onCommunityEdit: onCommunityEdit,\n        onPostEdit: onPostEdit,\n        onCommentEdit: onCommentEdit,\n        onAdminClick: onAdminClick,\n        subUser: tempUser,\n        shouldGoBack: true,\n        returnClick: goToUserProfile,\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this);\n      break;\n    case \"error\":\n      mainContent = /*#__PURE__*/_jsxDEV(Error, {\n        goToWentWrong: goToWentWrong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this);\n      break;\n    default:\n      mainContent = /*#__PURE__*/_jsxDEV(Welcome, {\n        goToLoginPage: goToLogin,\n        goToRegister: goToRegister,\n        goToHomepage: goToHomepage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 9\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      onPhredditClick: goToWelcome,\n      onSearchBarClick: goToSearch,\n      onCreatePostClick: goToNewPost,\n      redPost: redPost,\n      isLoggedIn: isLoggedIn,\n      onLogout: onLogout,\n      onUserSelect: goToUserProfile,\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      onHomeButtonClick: goToHomepage,\n      onCreateCommunityClick: goToNewCommunity,\n      onCommunitySelect: goToCommunity,\n      redHome: redHome,\n      redCommunity: redCommunity,\n      redCommunityLink: redCommunityLink,\n      selectedCommunity: selectedCommunity,\n      isLoggedIn: isLoggedIn,\n      reloadTrigger: buttonTrigger,\n      handleError: handleError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-content\",\n      children: mainContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(Phreddit, \"WF5zx1mmZDaorRPH5B5Pc/7i5Z8=\");\n_c = Phreddit;\nvar _c;\n$RefreshReg$(_c, \"Phreddit\");","map":{"version":3,"names":["React","useState","useEffect","Banner","Navbar","HomePage","NewPost","NewCommunity","NewComment","PostPage","CommunityPage","SearchBar","axios","Welcome","Login","Register","UserProfile","Error","jsxDEV","_jsxDEV","Fragment","_Fragment","defaults","withCredentials","baseURL","Phreddit","_s","posts","setPosts","comments","setComments","linkFlairs","setLinkFlairs","redPost","setPostButton","redHome","setHomeButton","redCommunity","setCommunityButton","redCommunityLink","setCommunityLink","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","currentComment","setCurrentComment","tempUser","setTempUser","searchTrigger","setSearchTrigger","view","setView","currentPost","setCurrentPost","selectedCommunity","setSelectedCommunity","replyTo","setReplyTo","searchQuery","setSearchQuery","buttonTrigger","setButtonTrigger","get","then","res","data","catch","err","console","log","handleError","checkLoggedIn","status","response","error","userInteraction","prev","window","addEventListener","removeEventListener","goToHomepage","goToPostPage","post","put","_id","goToNewPost","goToNewComment","object","goToSearch","goToWelcome","goToWentWrong","onLogout","goToLogin","goToRegister","goToNewCommunity","goToCommunity","community","goToUserProfile","user","onCommunityEdit","onCommentEdit","comment","onPostEdit","onAdminClick","addCommunity","addComments","updatedPost","find","p","createUser","getCommunityName","currentPostID","valid","checkPostExists","result","communityName","getLinkFlair","currentLinkFlairID","linkFlair","content","getCommentLength","commentArray","commentCount","countAll","forEach","commentID","commentIDs","Array","isArray","addNewPost","length","editPost","newPost","deletePost","delete","localStorage","setItem","Date","now","postId","editComment","newComment","deleteComment","editCommunity","newCommunity","deleteCommunity","getPosts","communityArray","communityPostIDs","postIDs","postID","thisPost","push","alert","mainContent","fileName","_jsxFileName","lineNumber","columnNumber","isEdit","isDelete","onDelete","onCreateCommunityClick","onCommentAdded","goToLoginPage","onCreateUserClick","onLoginSuccess","subUser","shouldGoBack","returnClick","children","onPhredditClick","onSearchBarClick","onCreatePostClick","onUserSelect","onHomeButtonClick","onCommunitySelect","reloadTrigger","id","_c","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/phreddit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Banner from './Banner';\nimport Navbar from './Navbar';\nimport HomePage from './HomePage';\nimport NewPost from './NewPost';\nimport NewCommunity from './NewCommunity';\nimport NewComment from './NewComment';\nimport PostPage from './PostPage';\nimport CommunityPage from './CommunityPage';\nimport SearchBar from './SearchBar';\nimport axios from 'axios';\nimport Welcome from './Welcome';\nimport Login from './Login';\nimport Register from './Register';\nimport UserProfile from './UserProfile'\nimport Error from './Error'\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = 'http://localhost:8000';\n\n\nexport default function Phreddit(){\n  // Common use constants and arrays\n  // const [communities, setCommunities] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [linkFlairs, setLinkFlairs] = useState([]);\n  const [redPost, setPostButton] = useState(false);\n  const [redHome, setHomeButton] = useState(false);\n  const [redCommunity, setCommunityButton] = useState(false);\n  const [redCommunityLink, setCommunityLink] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentComment, setCurrentComment] = useState(null);\n  const [tempUser, setTempUser] = useState(null);\n  const [searchTrigger, setSearchTrigger] = useState(0);\n\n  // Set states\n  const [view, setView] = useState('welcome');   // view can be homepage, post, newpost, newcommunity, newcomment, search, community\n  const [currentPost, setCurrentPost] = useState(null);\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\n  const [replyTo, setReplyTo] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [buttonTrigger, setButtonTrigger] = useState(0);\n \n  useEffect(() => { //Call get method of post and fill the array\n        axios.get(\"/posts\")\n        .then((res) => {\n            setPosts(res.data);\n        })\n        .catch((err) => {\n            console.log(\"Request failed to get posts\");\n            handleError(err);\n        });\n        // axios.get(\"/communities\")\n        // .then((res) => {\n        //     setCommunities(res.data);\n        // })\n        // .catch((err) => {\n        //     console.log(\"Request failed to get communities\");\n        //     handleError(err);\n        // });\n        axios.get(\"/comments\")\n        .then((res) => {\n            setComments(res.data);\n        })\n        .catch((err) => {\n            console.log(\"Request failed to get comments\");\n            handleError(err);\n        });\n        axios.get(\"/linkflairs\")\n        .then((res) => {\n            setLinkFlairs(res.data);\n        })\n        .catch((err) => {\n            console.log(\"Request failed to get linkflairs\");\n            handleError(err);\n        });      \n  }, []);\n\n  useEffect(() => {\n    async function checkLoggedIn() {\n      try{\n        const status = await axios.get(\"/check_login\", {withCredentials: true});\n\n        console.log(\"STATUS:\", status);\n        if(status.status === 200){\n          const response = await axios.get(\"/userProfile\", {withCredentials: true});\n          setCurrentUser(response.data);\n          setIsLoggedIn(true);\n        } else{\n          setIsLoggedIn(false);\n          setCurrentUser(null);\n        }\n        return;\n      } catch (err){\n        if(err.response && err.response.status === 401){\n          setIsLoggedIn(false);\n          setCurrentUser(null);\n        } else{\n          console.error(\"Error checking if user is logged in: \", err);\n          handleError(err);\n        }\n      }\n    }\n\n    checkLoggedIn();\n  }, []);\n\n  useEffect(() => {\n    const userInteraction = () => {\n      setButtonTrigger(prev => prev + 1);\n    };\n\n    window.addEventListener('click', userInteraction);\n    window.addEventListener('keydown', userInteraction);\n\n    return () => {\n      window.removeEventListener('click', userInteraction);\n      window.removeEventListener('keydown', userInteraction);\n    }\n  })\n    \n  const goToHomepage = () => {    \n    // axios.get(\"/communities\") // Reget all of the communities so state will update everytime the state is updated\n    // .then((res) => {\n    //     setCommunities(res.data);\n    // })\n    // .catch((err) => {\n    //     console.log(\"Request failed\");\n    //     handleError(err);\n    // });\n\n    axios.get(\"/linkflairs\") // Reget all of the posts so state will update everytime the state is updated\n    .then((res) => {\n        setLinkFlairs(res.data);\n    })\n    .catch((err) => {\n        console.log(\"Request failed\");\n        handleError(err);\n    });\n\n    setHomeButton(true);\n    setPostButton(false);\n    setCommunityButton(false);\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n    setView(\"homepage\");\n    console.log(\"Homepage\");\n  };\n\n  const goToPostPage = (post) => {\n    axios.put(`/post/${post._id}`, post)\n    .then((res) => {\n      setHomeButton(false);\n      setPostButton(false);\n      setCommunityButton(false);\n      setView(\"postpage\");\n      setCurrentPost(res.data);\n      console.log(\"Post Page\");\n      setCommunityLink(false);\n      setSelectedCommunity(null);\n      })\n      .catch((err) => {\n        handleError(err);\n        throw err;\n      })\n  };\n  const goToNewPost = () => {\n    axios.get(\"/linkflairs\") // Reget all of the posts so state will update everytime the state is updated\n    .then((res) => {\n        setLinkFlairs(res.data);\n    })\n    .catch((err) => {\n        console.log(\"Request failed\");\n        handleError(err);\n    });\n    setHomeButton(false);\n    setPostButton(true);\n    setCommunityButton(false);\n    setView(\"newPost\");\n    console.log(\"New Post Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToNewComment = (object) => {\n\n  setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"newComment\");\n    setReplyTo(object);\n    console.log(\"New Comment Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToSearch = (searchQuery) => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setSearchQuery(searchQuery);\n    setView(\"search\");\n    console.log(\"Search Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n    setSearchTrigger(prev => prev + 1);\n  };\n\n  const goToWelcome = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"welcome\");\n    console.log(\"Welcome Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n\n  const goToWentWrong = () => {\n    if(isLoggedIn){\n      onLogout();\n    } else{\n      goToWelcome();\n    }\n  }\n\n  const goToLogin = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(true);\n    setView(\"login\");\n    console.log(\"Login Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n  const goToRegister = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(true);\n    setView(\"register\");\n    console.log(\"Register Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  }\n\n  const goToNewCommunity = () => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(true);\n    setView(\"newCommunity\");\n    console.log(\"New Community Page\");\n    setCommunityLink(false);\n    setSelectedCommunity(null);\n  };\n\n \n  const goToCommunity = (community) => {\n\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"community\");\n    setSelectedCommunity(community);\n     console.log(community);\n    console.log(\"Community Page\");\n    setCommunityLink(true);\n  }\n\n  const goToUserProfile = (user) => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"user profile\");\n    if(user){\n      setCurrentUser(user);\n    }\n    console.log(user);\n    console.log(\"User Profile Page\");\n    setCommunityLink(true);\n  }\n\n  const onCommunityEdit = (community) => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"edit community\");\n    setSelectedCommunity(community);\n    console.log(community);\n    console.log(\"Edit Community Page\");\n    setCommunityLink(false);\n  }\n\n  const onCommentEdit = (comment) => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"edit comment\");\n    setCurrentComment(comment);\n    console.log(comment);\n    console.log(\"Edit Comment Page\");\n    setCommunityLink(false);\n  }\n\n  const onPostEdit = (post) => {\n    setHomeButton(false);\n    setPostButton(false);\n    setCommunityButton(false);\n    setView(\"edit post\");\n    setCurrentPost(post);\n    console.log(post);\n    console.log(\"Edit Post Page\");\n    setCommunityLink(false);\n  }\n\nconst handleError = (error) => {\n  console.error(\"Handling error:\", error);\n  setView('error');\n}\n\n// When button is clicked, go to Admin page and set view \nconst onAdminClick = ((user) => {\n  setTempUser(user);\n  setView(\"sub user profile\");\n  console.log(\"working\");\n});\n\n\n  //Add data to model\n  const addCommunity = (community) => {\n    axios.post('/new_community', community)\n    .then(() => {\n      // Re-fetch the entire updated list after the new one is saved\n      setButtonTrigger(prev => prev + 1);\n      return axios.get('/communities');\n    })\n    .then(res => {\n      //  setCommunities(res.data);\n       goToHomepage();\n    })\n    .catch(err => {\n      console.error(\"Error adding community\", err);\n      handleError(err);\n    })\n  };\n\n  const addComments = (comment) => {\n    axios.post('/new_comment', comment)\n      .then(() => {\n        // update the comments state by re-fetching comments\n        return axios.get('/comments');\n      })\n      .then((res) => {\n        setComments(res.data);\n        // re-fetch posts so the new comment's ID is in the post's commentIDs array\n        return axios.get('/posts');\n      })\n      .then((res) => {\n        const updatedPost = res.data.find(p => p._id === currentPost._id);\n        goToPostPage(updatedPost);        \n      })\n      .catch((err) => {\n        console.error(\"Error adding comment\", err);\n        handleError(err);\n      });\n  };\n\n  const createUser = (user) => {\n    return axios.post('/new_user', user)\n      .catch((err) => {\n        handleError(err);\n        throw err;\n      })\n  }\n  \n  // const addLinkFlairs = (linkFlair)=>{\n  //   modelInstance.data.linkFlairs.push(linkFlair);\n  //   setLinkFlairs(modelInstance.data.linkFlairs);\n  // }\n\n  // getters\n  // const getCommunityName = (currentPostID) => {\n  //   const community = communities.find(community => community.postIDs.includes(currentPostID));\n\n  //   if (community) {\n  //     return community.name;\n  //   } else {\n  //     return 'FIX THIS';\n  //   }\n  // }\n  \n  const getCommunityName = async (currentPostID) => {\n    try{\n      const valid = await checkPostExists(currentPostID);\n      if(!valid){\n        return \"DELETED\";\n      }\n      // working\n      const result = await axios.get(`/getCommunityByPost/${currentPostID}`);\n      return result.data.communityName;\n    } catch(err) {\n      console.error(\"Error fetching community for post:\", err);\n      handleError(err);\n    }\n  };\n  \n  const getLinkFlair = (currentLinkFlairID) => {\n    const linkFlair = linkFlairs.find(linkFlair => linkFlair._id === currentLinkFlairID);\n    return linkFlair ? linkFlair.content : \"\";\n  }\n\n  const getCommentLength = (commentArray = []) => {\n    let commentCount = 0;\n\n    const countAll = (commentArray) => {\n      commentArray.forEach(commentID =>{\n        commentCount++;\n        const currentComment = comments.find(comment => comment._id === commentID);\n       \n\n  \n        console.log(\"Comments:\",comments);\n        console.log(\"COMMENT ID:\",commentID);\n        // if(currentComment.commentIDs.length !== 0){\n        //   countAll(currentComment.commentIDs);\n        // }\n\n        if (currentComment?.commentIDs && Array.isArray(currentComment.commentIDs)) {\n          countAll(currentComment.commentIDs);\n         }\n      });\n    }\n\n    countAll(commentArray);\n\n    return commentCount;\n  }\n\n\n  function addNewPost(post) {\n    console.log(\"📝 addNewPost called with:\", post);\n    axios.post('/new_post', post,  { withCredentials: true } )\n      .then(() => axios.get(\"/posts\"))\n      .then((res) => {\n        console.log(\"fetched posts:\", res.data.length);\n         setPosts(res.data); \n         goToHomepage();\n      })\n      .catch(err => {\n         console.error(\"Error adding new post\", err);\n         handleError(err);\n      });\n  }\n\n  function editPost(newPost, post) {\n    console.log(\"📝 editPost called with:\", post);\n    axios.put(`/editPost/${post._id}`, newPost, { withCredentials: true } )\n      .then(() => axios.get(\"/posts\"))\n      .then((res) => {\n        console.log(\"fetched posts:\", res.data.length);\n         setPosts(res.data);\n         goToHomepage();\n      })\n      .catch(err => {\n         console.error(\"Error editing post\", err);\n         handleError(err);\n      });\n  }\n\n  function deletePost(post) {\n    axios\n      .delete(`/deletePost/${post._id}`, { withCredentials: true })\n      .then(() => axios.get(\"/posts\"))\n      .then((res) => {\n        setPosts(res.data);\n        localStorage.setItem('postsUpdated', Date.now());\n        goToHomepage();\n      })\n      .catch((err) => {\n        console.error(\"Error deleting post\", err);\n        handleError(err);\n      });\n  }\n\n  const checkPostExists = async(postId) =>{\n    try{\n      const res = await axios.get(`/postExist/${postId}`);\n      return res.data;\n    } catch(err){\n      console.error('Error checking post status', err);\n      handleError(err);\n      return false;\n    }\n  }\n  function editComment(newComment, comment) {\n    console.log(\"editComment called with:\", comment);\n    axios.put(`/editComment/${comment._id}`, newComment, {withCredentials: true})\n      .then(() => axios.get(\"/comments\"))\n      .then((res) => {\n          console.log(\"fetched comments:\", res.data.length);\n          setComments(res.data);\n          goToHomepage();\n      })\n      .catch(err => {\n        console.error(\"Error editing comment\", err);\n        handleError(err);\n      });\n  }\n\n  function deleteComment(comment) {\n    axios\n      .delete(`/deleteComment/${comment._id}`, { withCredentials: true })\n      .then(() => axios.get(\"/comments\"))\n      .then(res => {\n        setComments(res.data);\n        goToHomepage();\n      })\n      .catch(err => {\n        console.error(\"Error deleting comment\", err);\n        handleError(err);});\n  }\n  \n\n  function editCommunity(newCommunity, community) {\n    console.log(\"editCommunity called with:\", community);\n    axios.put(`/editCommunity/${community._id}`, newCommunity, {withCredentials: true})\n      .then(() => axios.get(\"/communities\"))\n      .then((res) => {\n          console.log(\"fetched communities:\", res.data.length);\n          // setCommunities(res.data);\n          setButtonTrigger(prev => prev + 1);\n          goToHomepage();\n      })\n      .catch(err => {\n        console.error(\"Error editing community\", err);\n        handleError(err);\n      })\n  }\n  \n  function deleteCommunity(community) {\n    axios\n      .delete(`/deleteCommunity/${community._id}`, { withCredentials: true })\n      .then(() => axios.get(\"/communities\"))\n      .then(res => {\n        // setCommunities(res.data);\n        setButtonTrigger(prev => prev + 1);\n        goToHomepage();\n      })\n      .catch(err => {\n        console.error(\"Error deleting community\", err)\n        handleError(err);\n      });\n  }\n  \n\nfunction getPosts(community){\n  const communityArray = [];\n  const communityPostIDs = community.postIDs;\n  communityPostIDs.forEach(postID => {\n    const thisPost = posts.find(post => post._id === postID);\n    communityArray.push(thisPost);\n    } \n  )\n  return communityArray;\n}\n\nfunction onLogout(){\n  axios.post('/logout', {withCredentials:true})\n      .then(()=>{setIsLoggedIn(false); setCurrentUser(null); goToWelcome();})\n      .catch((err) => {\n        alert('Logout failed. Please try again.');\n        console.error('Logout failed:', err)\n        handleError(err);\n      });\n}\n\n  //determine main content based on view\n  let mainContent;\n\n  switch(view){\n    case \"homepage\":\n      mainContent=(\n        <HomePage\n            goToPostPage={goToPostPage}\n            getCommunityName={getCommunityName}\n            getCommentLength={getCommentLength}\n            isLoggedIn = {isLoggedIn}\n            handleError = {handleError}\n            checkPostExists = {checkPostExists}\n            buttonTrigger = {buttonTrigger}\n        />\n      );\n    break;\n    case \"postpage\":\n      mainContent=(\n        <PostPage\n            post={currentPost}\n            getLinkFlair={getLinkFlair}\n            getCommentLength={getCommentLength}\n            goToNewComment={goToNewComment}\n            isLoggedIn={isLoggedIn}\n            handleError={handleError}\n            />\n            \n      );\n    break;\n    case \"newPost\":\n      mainContent=(\n        <NewPost\n            addNewPost={addNewPost}\n            linkFlairs={linkFlairs}\n            user={currentUser}\n            handleError={handleError}/>\n      );\n    break;\n    case \"edit post\":\n      mainContent=(\n        <NewPost\n            addNewPost={addNewPost}\n            linkFlairs={linkFlairs}\n            user={currentUser}\n            isEdit={true}\n            isDelete={true}\n            post={currentPost}\n            editPost={editPost}\n            onDelete={deletePost}\n            handleError={handleError}/>\n      );\n    break;\n    case \"newCommunity\":\n      mainContent=(\n        <NewCommunity\n              addCommunity={addCommunity}\n              onCreateCommunityClick={goToHomepage}\n              user = {currentUser}\n              handleError = {handleError}\n        />\n      );\n    break;\n    case \"edit community\":\n      mainContent=(\n        <NewCommunity\n              addCommunity={addCommunity}\n              onCreateCommunityClick={goToHomepage}\n              user = {currentUser}\n              isEdit = {true}\n              community = {selectedCommunity}\n              editCommunity={editCommunity}\n              onDelete={deleteCommunity}\n              handleError = {handleError}\n        />\n      );\n    break;\n    case \"newComment\":\n      mainContent=(\n        <NewComment\n            object={replyTo}\n            onCommentAdded={addComments}\n            user = {currentUser}\n        />\n      );\n    break;\n    case \"edit comment\":\n      mainContent=(\n        <NewComment\n            object={currentComment}\n            onCommentAdded={addComments}\n            user = {currentUser}\n            isEdit = {true}\n            comment = {currentComment}\n            editComment = {editComment}\n            onDelete={deleteComment}\n        />\n      );\n    break;\n    case \"search\":\n      mainContent=(\n        <SearchBar\n              searchQuery={searchQuery}\n              goToPostPage={goToPostPage}\n              getCommunityName={getCommunityName}\n              getCommentLength={getCommentLength}\n              isLoggedIn={isLoggedIn}\n              handleError={handleError}\n              searchTrigger={searchTrigger}\n              checkPostExists={checkPostExists}\n        />\n      );\n      break;\n    case \"community\":\n      mainContent=(\n        <CommunityPage\n                community={selectedCommunity}\n                getPosts={getPosts}\n                goToPostPage={goToPostPage}\n                getCommunityName={getCommunityName}\n                comments={comments}\n                getCommentLength={getCommentLength}\n                isLoggedIn={isLoggedIn}\n                buttonTrigger={setButtonTrigger}\n                handleError={handleError}\n                checkPostExists={checkPostExists}\n          />\n      );\n      \n    break;\n    case \"welcome\":\n      if(isLoggedIn) { goToHomepage(); return; }\n      else{\n      mainContent=(\n        <Welcome\n            goToLoginPage = {goToLogin}\n            goToRegister = {goToRegister}\n            goToHomepage = {goToHomepage}\n        />\n      );}\n    break;\n    case \"register\":\n      mainContent=(\n        <Register\n          createUser = {createUser}\n          onCreateUserClick = {goToWelcome}\n        />\n      );\n    break;\n    case \"login\":\n      mainContent=(\n        <Login onLoginSuccess={(user) => {setIsLoggedIn(true); setCurrentUser(user); goToHomepage();}} handleError={handleError} />\n      );\n    break;\n    case \"user profile\":\n      mainContent=(\n        <UserProfile goToPostPage={goToPostPage} getCommunityName={getCommunityName} getCommentLength={getCommentLength} onCommunityEdit={onCommunityEdit} onPostEdit={onPostEdit} onCommentEdit={onCommentEdit} onAdminClick={onAdminClick} handleError={handleError} setButtonTrigger={setButtonTrigger}/>\n      )\n    break;\n    case \"sub user profile\":\n      mainContent=(\n        <UserProfile goToPostPage={goToPostPage} getCommunityName={getCommunityName} getCommentLength={getCommentLength} onCommunityEdit={onCommunityEdit} onPostEdit={onPostEdit} onCommentEdit={onCommentEdit} onAdminClick={onAdminClick} subUser={tempUser} shouldGoBack={true} returnClick={goToUserProfile} handleError={handleError}/>\n      )\n    break;\n    case \"error\":\n      mainContent=(\n        <Error goToWentWrong={goToWentWrong}/>\n      )\n    break;\n    default:\n      mainContent=(\n        <Welcome\n            goToLoginPage = {goToLogin}\n            goToRegister = {goToRegister}\n            goToHomepage = {goToHomepage}\n        />\n      );\n    \n  }\n\n  return(\n    <>\n       <Banner \n           onPhredditClick={goToWelcome} \n           onSearchBarClick={goToSearch}\n           onCreatePostClick={goToNewPost}\n           redPost={redPost}\n           isLoggedIn={isLoggedIn}\n           onLogout={onLogout}\n           onUserSelect={goToUserProfile}\n           user={currentUser}\n         />\n       <hr></hr>\n  \n      <Navbar\n           onHomeButtonClick={goToHomepage}\n           onCreateCommunityClick={goToNewCommunity}\n           onCommunitySelect={goToCommunity}\n           redHome={redHome}\n           redCommunity={redCommunity}\n           redCommunityLink={redCommunityLink}\n           selectedCommunity={selectedCommunity}\n           isLoggedIn = {isLoggedIn}\n           reloadTrigger = {buttonTrigger}\n           handleError = {handleError}\n       />\n       <div id=\"main-content\">\n         {mainContent}\n       </div>  \n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}