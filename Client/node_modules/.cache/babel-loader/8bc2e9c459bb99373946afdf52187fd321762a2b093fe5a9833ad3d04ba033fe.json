{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/Post.jsx\",\n  _s = $RefreshSig$();\nimport TimeStamps from './TimeStamps.jsx';\nimport ParseDescription from './ParseDescription.jsx';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post({\n  post,\n  goToPostPage,\n  getCommunityName,\n  community,\n  getCommentLength,\n  checkPostExists\n}) {\n  _s();\n  const shortenedContent = post.content.length > 80 ? post.content.substring(0, 80) + \"...\" : post.content;\n  const content = /*#__PURE__*/_jsxDEV(ParseDescription, {\n    description: shortenedContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 19\n  }, this);\n  const linkFlair = post.linkFlairID;\n  const [communityName, setCommunityName] = useState(\"\");\n  const [postExist, setPostExists] = useState(true);\n  console.log(\"Made it to post page\");\n  useEffect(() => {\n    const checkPost = async () => {\n      try {\n        const exists = await checkPostExists(post._id);\n        setPostExists(exists);\n      } catch (err) {\n        console.error(\"Error checking post existance\", err);\n      }\n    };\n    const fetchCommunityName = async () => {\n      const name = await getCommunityName(post._id);\n      setCommunityName(name);\n    };\n    fetchCommunityName();\n    checkPost();\n  }, [post._id, getCommunityName, checkPostExists]);\n  if (!post || !post.content || !Array.isArray(post.commentIDs)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  if (!postExist) {\n    return;\n  }\n  console.log(\"Rendering post:\", post.title, post._id);\n  console.log(\"Community name:\", communityName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-link\",\n      onClick: e => {\n        e.preventDefault();\n        goToPostPage(post);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-header\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [!community && `${communityName} |`, \" \", post.postedBy, \" | \", /*#__PURE__*/_jsxDEV(TimeStamps, {\n            date: post.postedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"linkflair-content\",\n        children: linkFlair ? linkFlair.content : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-description\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Views: \", post.views, \" | Comments: \", getCommentLength(post.commentIDs), \" |  Votes: \", post.vote]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"post_line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, post._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Post, \"FOmEz0F2sFuu8QC3n8olftTNCvU=\");\n_c = Post;\nexport default Post;\nPost.propTypes = {\n  post: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    linkFlairID: PropTypes.object,\n    postedBy: PropTypes.string.isRequired,\n    postedDate: PropTypes.instanceOf(Date).isRequired,\n    commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n    views: PropTypes.number.isRequired,\n    vote: PropTypes.number\n  }).isRequired,\n  goToPostPage: PropTypes.func.isRequired,\n  getCommunityName: PropTypes.func.isRequired,\n  community: PropTypes.bool.isRequired,\n  getCommentLength: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["TimeStamps","ParseDescription","PropTypes","useState","useEffect","jsxDEV","_jsxDEV","Post","post","goToPostPage","getCommunityName","community","getCommentLength","checkPostExists","_s","shortenedContent","content","length","substring","description","fileName","_jsxFileName","lineNumber","columnNumber","linkFlair","linkFlairID","communityName","setCommunityName","postExist","setPostExists","console","log","checkPost","exists","_id","err","error","fetchCommunityName","name","Array","isArray","commentIDs","children","title","className","onClick","e","preventDefault","id","postedBy","date","postedDate","views","vote","_c","propTypes","shape","string","isRequired","object","instanceOf","Date","arrayOf","number","func","bool","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/Post.jsx"],"sourcesContent":["\nimport TimeStamps from './TimeStamps.jsx';\nimport ParseDescription from './ParseDescription.jsx';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from \"react\";\n\nfunction Post({post, goToPostPage, getCommunityName, community, getCommentLength, checkPostExists}){\n  const shortenedContent = post.content.length > 80? post.content.substring(0, 80) + \"...\" : post.content;\n  const content = <ParseDescription description={shortenedContent}/>;\n  const linkFlair = post.linkFlairID;\n  const [communityName, setCommunityName] = useState(\"\");\n  const [postExist, setPostExists] = useState(true);\n  console.log(\"Made it to post page\");\n\n  useEffect(() => {\n    const checkPost = async () => {\n      try{\n        const exists = await checkPostExists(post._id);\n        setPostExists(exists);\n      } catch (err){\n        console.error(\"Error checking post existance\", err);\n      }\n    };\n\n    const fetchCommunityName = async () => {\n      const name = await getCommunityName(post._id);\n      setCommunityName(name);\n    };\n\n    fetchCommunityName();\n    checkPost();\n  }, [post._id, getCommunityName, checkPostExists]);\n  \n  if (!post || !post.content || !Array.isArray(post.commentIDs)) {\n    return <div>Loadingâ€¦</div>;\n  }\n\n  if(!postExist){\n    return;\n  }\n\n  console.log(\"Rendering post:\", post.title, post._id);\n  console.log(\"Community name:\", communityName);\n    \n      return (\n        <div key={post._id} className=\"post-container\">\n     \n          <div\n            className=\"post-link\"\n            onClick={e => {\n              e.preventDefault();\n              goToPostPage(post);\n            }}\n          >\n            <div id=\"post-header\">\n              <span>\n                {!community && `${communityName} |`}{\" \"}\n                {post.postedBy} | <TimeStamps date={post.postedDate} />\n              </span>\n            </div>\n            <div id=\"post-title\">\n              <h3>{post.title}</h3>\n            </div>\n            <div id=\"linkflair-content\">\n              {linkFlair ? linkFlair.content : \"\"}\n            </div>\n            <div id=\"post-description\">{content}</div>\n            <div id=\"post-footer\">\n              <span>\n                Views: {post.views} | Comments: {getCommentLength(post.commentIDs)} |  Votes: {post.vote}\n              </span>\n              \n            </div>\n            <hr className=\"post_line\" />\n          </div>\n\n          </div>\n    \n\n      );\n    }\n    \n    export default Post;\n    \n    Post.propTypes = {\n      post: PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        linkFlairID: PropTypes.object,\n        postedBy: PropTypes.string.isRequired,\n        postedDate: PropTypes.instanceOf(Date).isRequired,\n        commentIDs: PropTypes.arrayOf(PropTypes.string).isRequired,\n        views: PropTypes.number.isRequired,\n        vote: PropTypes.number\n      }).isRequired,\n      goToPostPage: PropTypes.func.isRequired,\n      getCommunityName: PropTypes.func.isRequired,\n      community: PropTypes.bool.isRequired,\n      getCommentLength: PropTypes.func.isRequired\n    };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}