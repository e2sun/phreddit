{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/NewCommunity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\nexport default function NewCommunity({\n  addCommunity,\n  onCreateCommunityClick,\n  user,\n  isEdit,\n  community,\n  editCommunity,\n  onDelete,\n  handleError\n}) {\n  _s();\n  //Use State\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    const getInfo = async () => {\n      console.log(\"MADE IT\");\n      if (isEdit && community) {\n        setName(community.name);\n        setDescription(community.description);\n      }\n    };\n    getInfo();\n  }, [isEdit, community]);\n\n  //Handle Submit Button Function\n  const handleSubmit = async e => {\n    e.preventDefault(); // Don't reload page \n    const nameMaxChar = 100;\n    const descriptionMaxChar = 500;\n    let nameCount = name.length; // Get length of input\n    let descriptionCount = description.length; // Get length of input\n    // let usernameCheck = username.length; // Get length of input\n    var valid = true;\n    if (nameCount > nameMaxChar) {\n      alert(\"Your community name has exceeded the character limit!\");\n      valid = false;\n      return;\n    }\n    if (nameCount === 0) {\n      alert(\"Community name is required!\");\n      valid = false;\n      return;\n    }\n    if (descriptionCount > descriptionMaxChar) {\n      alert(\"Your community description has exceeded the character limit!\");\n      valid = false;\n      return;\n    }\n    if (descriptionCount === 0) {\n      alert(\"Community description is required!\");\n      valid = false;\n      return;\n    }\n    if (!isEdit) {\n      const response = await axios.get(`/isUnique/${name}`).catch(err => {\n        handleError(err);\n      });\n      if (response.data.isDuplicate) {\n        alert(\"Community already exists, please enter a unique name\");\n        valid = false;\n        return;\n      }\n    }\n\n    // Check hyperlinks\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\((.*?)\\)/g;\n    let match;\n    while ((match = hyperlinkRegex.exec(description)) !== null) {\n      if (match[1].trim() === '') {\n        alert(\"The hyperlink text (inside []) cannot be empty!\");\n        valid = false;\n        return;\n      }\n      if (match[2].trim() === '') {\n        alert(\"The hyperlink URL (inside ()) cannot be empty!\");\n        valid = false;\n        return;\n      }\n      if (!(match[2].slice(0, 8) === 'https://' || match[2].slice(0, 7) === 'http://')) {\n        alert(\"The hyperlink URL must begin with either 'https://' or 'http://'!\");\n        valid = false;\n        return;\n      }\n    }\n    if (valid) {\n      const newCommunity = {\n        name: name,\n        description: description,\n        postIDs: [],\n        startDate: new Date(),\n        members: [user.email],\n        memberCount: 1,\n        createdBy: user.displayName\n      };\n      alert(\"Your community has successfully been created!\");\n      if (isEdit) {\n        editCommunity(newCommunity, community);\n      } else {\n        addCommunity(newCommunity);\n      }\n\n      //Reset Form\n      setName(\"\");\n      setDescription(\"\");\n      onCreateCommunityClick();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newcommunity_setup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"newcommunity_header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isEdit ? \"Edit Community\" : \"Tell us about your Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"newcommunity_form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"community_name\",\n        type: \"text\",\n        placeholder: isEdit ? \"\" : \"Community Name (required, max 100 characters)\",\n        onFocus: e => e.target.placeholder = \"\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"community_description_box\",\n        type: \"text\",\n        placeholder: \"Community Description (required, max 500 characters)\",\n        onFocus: e => e.target.placeholder = \"\",\n        onChange: e => setDescription(e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"engender_community\",\n        type: \"submit\",\n        value: isEdit ? \"Save Changes\" : \"Engender Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), isEdit && onDelete && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"delete_community\",\n        style: {\n          backgroundColor: '#f44336',\n          color: '#fff'\n        },\n        onClick: () => {\n          if (window.confirm(\"Are you sure you want to delete this community?\")) {\n            onDelete(community);\n          }\n        },\n        children: \"Delete Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this);\n}\n_s(NewCommunity, \"8F77ILHfVHtyWEp/npdJwtljM9E=\");\n_c = NewCommunity;\nNewCommunity.propTypes = {\n  addCommunity: PropTypes.func.isRequired,\n  onCreateCommunityClick: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"NewCommunity\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","axios","jsxDEV","_jsxDEV","defaults","baseURL","NewCommunity","addCommunity","onCreateCommunityClick","user","isEdit","community","editCommunity","onDelete","handleError","_s","name","setName","description","setDescription","getInfo","console","log","handleSubmit","e","preventDefault","nameMaxChar","descriptionMaxChar","nameCount","length","descriptionCount","valid","alert","response","get","catch","err","data","isDuplicate","hyperlinkRegex","match","exec","trim","slice","newCommunity","postIDs","startDate","Date","members","email","memberCount","createdBy","displayName","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onFocus","target","onChange","value","style","backgroundColor","color","onClick","window","confirm","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/NewCommunity.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:8000';\n\nexport default function NewCommunity({addCommunity, onCreateCommunityClick, user, isEdit, community, editCommunity, onDelete, handleError}){\n\n  //Use State\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n   useEffect( () => {\n              const getInfo = async() => {\n                  console.log(\"MADE IT\")\n                  if (isEdit && community){\n                      setName(community.name);\n                      setDescription(community.description);\n                  }\n              }\n              getInfo();\n              \n          }, [isEdit, community])\n\n\n  //Handle Submit Button Function\n  const handleSubmit = async (e) =>{\n    e.preventDefault(); // Don't reload page \n    const nameMaxChar = 100;\n    const descriptionMaxChar = 500;\n\n    let nameCount=name.length; // Get length of input\n    let descriptionCount=description.length; // Get length of input\n    // let usernameCheck = username.length; // Get length of input\n    var valid=true;\n\n    if (nameCount>nameMaxChar){\n        alert(\"Your community name has exceeded the character limit!\");\n        valid=false;\n        return;\n    }\n    if (nameCount===0){\n        alert(\"Community name is required!\");\n        valid=false;\n        return;\n    }\n    if (descriptionCount>descriptionMaxChar){\n        alert(\"Your community description has exceeded the character limit!\");\n        valid=false;\n        return;\n    }\n    if (descriptionCount===0){\n        alert(\"Community description is required!\");\n        valid=false;\n        return;\n    }\n\n    if(!isEdit){\n      const response = await axios.get(`/isUnique/${name}`)\n        .catch(err => {\n          handleError(err);\n        }\n        )\n      if(response.data.isDuplicate){\n        alert(\"Community already exists, please enter a unique name\");\n        valid = false;\n        return;\n      }\n    }\n  \n    // Check hyperlinks\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\((.*?)\\)/g;\n\n    let match;\n\n    while ((match = hyperlinkRegex.exec(description)) !== null) {\n      if (match[1].trim()===''){\n        alert(\"The hyperlink text (inside []) cannot be empty!\");\n        valid=false;\n        return;\n      }\n      if (match[2].trim()===''){\n        alert(\"The hyperlink URL (inside ()) cannot be empty!\");\n        valid=false;\n        return;\n      }\n  \n\n      if (!(match[2].slice(0, 8) === 'https://' || match[2].slice(0, 7) === 'http://')) {\n        alert(\"The hyperlink URL must begin with either 'https://' or 'http://'!\");\n        valid = false;\n        return;\n      }\n  }\n\n    \n    if (valid){\n        const newCommunity = {\n            name: name,\n            description: description,\n            postIDs: [],\n            startDate: new Date(),\n            members: [user.email],\n            memberCount: 1,\n            createdBy: user.displayName\n        };\n\n        \n      \n        alert(\"Your community has successfully been created!\");\n        if(isEdit){\n          editCommunity(newCommunity, community);\n        } else {\n          addCommunity(newCommunity);\n        }\n\n        //Reset Form\n        setName(\"\");\n        setDescription(\"\");\n  \n        onCreateCommunityClick();\n        \n    }\n  \n  }\n\n    return(\n      <div id=\"newcommunity_setup\">\n        <div id=\"newcommunity_header\"> \n         <h1>{isEdit ? \"Edit Community\" : \"Tell us about your Community\"}</h1>\n       </div>\n        <form id=\"newcommunity_form\" onSubmit={handleSubmit}>\n            <input id=\"community_name\" type=\"text\" placeholder={isEdit ? \"\" : \"Community Name (required, max 100 characters)\"} onFocus={(e) => e.target.placeholder = \"\"} onChange={(e) => setName(e.target.value)} value={name}/> \n            <textarea id=\"community_description_box\" type=\"text\" placeholder=\"Community Description (required, max 500 characters)\" onFocus={(e) => e.target.placeholder = \"\"} onChange={(e) => setDescription(e.target.value)} value={description}></textarea>\n            {/* <input id=\"creator_username\" type=\"text\" placeholder=\"Creator Username (required)\" onFocus={(e) => e.target.placeholder = \"\"} onChange={(e) => setUsername(e.target.value)}/>  */}\n            <input id=\"engender_community\" type=\"submit\" value={isEdit ? \"Save Changes\" : \"Engender Community\"}/>\n        {isEdit && onDelete && (\n          <button\n            type=\"button\"\n            id=\"delete_community\"\n            style={{ backgroundColor: '#f44336', color: '#fff' }}\n            onClick={() => {\n              if (window.confirm(\"Are you sure you want to delete this community?\")) {\n                onDelete(community);\n              }\n            }}\n          >\n            Delete Community\n          </button>\n        )}\n        </form>\n      </div>  \n    );\n}\n\n\nNewCommunity.propTypes = {\n  addCommunity: PropTypes.func.isRequired,\n  onCreateCommunityClick: PropTypes.func.isRequired\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}