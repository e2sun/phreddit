{"ast":null,"code":"var _jsxFileName = \"/Users/evelynsun/Desktop/phreddit/Client/src/components/NewPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\nfunction NewPost({\n  addNewPost,\n  editPost,\n  onDelete,\n  linkFlairs,\n  user,\n  isEdit,\n  post,\n  handleError\n}) {\n  _s();\n  const [postCommunity, setPostCommunity] = useState('');\n  const [postTitle, setPostTitle] = useState('');\n  const [linkFlairDrop, setLinkFlairDrop] = useState('');\n  const [linkFlairType, setLinkFlairType] = useState('');\n  const [postContent, setPostContent] = useState('');\n  const [baseCommunities, setCommunities] = useState([]);\n  const [communities, setLoggedCommunities] = useState([]);\n\n  // Load all communities\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data\n        } = await axios.get('/communities');\n        setCommunities(data);\n      } catch (err) {\n        console.error(err);\n        handleError(err);\n      }\n    })();\n  }, []);\n\n  // Reorder so user's communities come first\n  useEffect(() => {\n    const myIDs = baseCommunities.filter(c => c.members.includes(user.email)).map(c => c._id);\n    const mine = baseCommunities.filter(c => myIDs.includes(c._id));\n    const other = baseCommunities.filter(c => !myIDs.includes(c._id));\n    setLoggedCommunities([...mine, ...other]);\n  }, [user, baseCommunities]);\n\n  // Prefill when editing\n  useEffect(() => {\n    if (isEdit && post) {\n      (async () => {\n        try {\n          const {\n            data: community\n          } = await axios.get(`/community/${post._id}`);\n          setPostCommunity(community.name);\n          setPostTitle(post.title);\n          setLinkFlairDrop(post.linkFlairID || '');\n          setPostContent(post.content);\n        } catch (err) {\n          console.error(\"Failed to populate previous data\", err);\n          handleError(err);\n        }\n      })();\n    }\n  }, [isEdit, post]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (postCommunity === '') {\n      alert(\"Please enter a community\");\n      return;\n    }\n    if (postTitle === '') {\n      alert(\"Please enter a title\");\n      return;\n    }\n    if (postTitle.length > 100) {\n      alert(\"Title is too long, please choose a new one\");\n      return;\n    }\n    var postFlairID;\n    if (linkFlairDrop !== '' && linkFlairType !== '') {\n      alert(\"Please select only one linkFlair\");\n      return;\n    } else if (linkFlairDrop !== '') {\n      postFlairID = linkFlairDrop;\n    } else if (linkFlairType !== '') {\n      if (linkFlairType.length > 30) {\n        alert(\"Link Flair is too long, please choose a new one\");\n        return;\n      }\n      const newLinkFlair = {\n        content: linkFlairType\n      };\n      // async function createNewLinkFlair() {\n      console.log('Creating new link flair');\n      try {\n        const linkFlair = await axios.post('http://localhost:8000/new_linkflair', newLinkFlair);\n        postFlairID = linkFlair.data._id;\n      } catch {\n        console.log('Error with link flair');\n      }\n      // }\n    }\n    if (postContent === '') {\n      alert(\"Please enter post content\");\n      return;\n    }\n\n    // Check hyperlinks\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\((.*?)\\)/g;\n    let match;\n    while ((match = hyperlinkRegex.exec(postContent)) !== null) {\n      if (match[1].trim() === '') {\n        alert(\"The hyperlink text (inside []) cannot be empty!\");\n        return;\n      }\n      if (match[2].trim() === '') {\n        alert(\"The hyperlink URL (inside ()) cannot be empty!\");\n        return;\n      }\n      if (!(match[2].slice(0, 8) === 'https://' || match[2].slice(0, 7) === 'http://')) {\n        alert(\"The hyperlink URL must begin with either 'https://' or 'http://'!\");\n        return;\n      }\n    }\n    alert(\"Your post has successfully been created!\");\n    const payload = {\n      title: postTitle,\n      content: postContent,\n      linkFlair: postFlairID,\n      postedBy: user.displayName,\n      postedDate: new Date(),\n      commentIDs: [],\n      views: 0,\n      community: postCommunity\n    };\n    if (isEdit) editPost(payload, post);else addNewPost(payload);\n  };\n  function loadCommunitySelections() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"community_selection\",\n      value: postCommunity,\n      onChange: e => setPostCommunity(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), communities.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: c.name,\n        children: c.name\n      }, c._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  function loadLinkFlairSelections() {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"flair_selection\",\n      value: linkFlairDrop,\n      onChange: e => setLinkFlairDrop(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Link Flair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), linkFlairs.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: f._id,\n        children: f.content\n      }, f._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"newpost_setup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"newpost_header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isEdit ? \"Edit Post\" : \"Create a New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"newpost_form\",\n      action: \"/send\",\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Community (required)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), loadCommunitySelections(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Post Title (required, max 100 characters)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"post_title\",\n        type: \"text\",\n        value: postTitle,\n        onChange: e => setPostTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Existing Flair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), loadLinkFlairSelections(), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Or Create a New Flair (max 30 characters)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"new_flair\",\n        type: \"text\",\n        value: linkFlairType,\n        onChange: e => setLinkFlairType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Content (required)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        value: postContent,\n        onChange: e => setPostContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submit_post\",\n        type: \"submit\",\n        children: isEdit ? \"Save Changes\" : \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), isEdit && onDelete && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: '#f44336',\n          color: '#fff'\n        },\n        id: \"delete_post\",\n        type: \"button\",\n        onClick: () => {\n          if (window.confirm(\"Are you sure you want to delete this post?\")) {\n            onDelete(post);\n          }\n        },\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPost, \"6lWozARtG7znVoZ0J1/PcqcqHfk=\");\n_c = NewPost;\nexport default NewPost;\nconst linkFlairShape = PropTypes.shape({\n  _id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired\n});\nNewPost.propTypes = {\n  addNewPost: PropTypes.func.isRequired,\n  editPost: PropTypes.func,\n  // required if isEdit\n  onDelete: PropTypes.func,\n  // optional delete handler\n  linkFlairs: PropTypes.arrayOf(linkFlairShape).isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    displayName: PropTypes.string.isRequired\n  }).isRequired,\n  isEdit: PropTypes.bool,\n  post: PropTypes.shape({\n    _id: PropTypes.string\n  }).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","useEffect","axios","PropTypes","jsxDEV","_jsxDEV","defaults","baseURL","NewPost","addNewPost","editPost","onDelete","linkFlairs","user","isEdit","post","handleError","_s","postCommunity","setPostCommunity","postTitle","setPostTitle","linkFlairDrop","setLinkFlairDrop","linkFlairType","setLinkFlairType","postContent","setPostContent","baseCommunities","setCommunities","communities","setLoggedCommunities","data","get","err","console","error","myIDs","filter","c","members","includes","email","map","_id","mine","other","community","name","title","linkFlairID","content","handleSubmit","e","preventDefault","alert","length","postFlairID","newLinkFlair","log","linkFlair","hyperlinkRegex","match","exec","trim","slice","payload","postedBy","displayName","postedDate","Date","commentIDs","views","loadCommunitySelections","id","value","onChange","target","children","fileName","_jsxFileName","lineNumber","columnNumber","loadLinkFlairSelections","f","action","method","onSubmit","type","style","backgroundColor","color","onClick","window","confirm","_c","linkFlairShape","shape","string","isRequired","propTypes","func","arrayOf","bool","$RefreshReg$"],"sources":["/Users/evelynsun/Desktop/phreddit/Client/src/components/NewPost.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\naxios.defaults.baseURL = 'http://localhost:8000';\n\nfunction NewPost({addNewPost,editPost,onDelete, linkFlairs,user,isEdit,post, handleError}) {\n  const [postCommunity, setPostCommunity] = useState('');\n  const [postTitle, setPostTitle]         = useState('');\n  const [linkFlairDrop, setLinkFlairDrop] = useState('');\n  const [linkFlairType, setLinkFlairType] = useState('');\n  const [postContent, setPostContent]     = useState('');\n\n  const [baseCommunities, setCommunities]   = useState([]);\n  const [communities, setLoggedCommunities] = useState([]);\n\n  // Load all communities\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await axios.get('/communities');\n        setCommunities(data);\n      } catch (err) {\n        console.error(err);\n        handleError(err)\n      }\n    })();\n  }, []);\n\n  // Reorder so user's communities come first\n  useEffect(() => {\n    const myIDs = baseCommunities\n      .filter(c => c.members.includes(user.email))\n      .map(c => c._id);\n    const mine  = baseCommunities.filter(c => myIDs.includes(c._id));\n    const other = baseCommunities.filter(c => !myIDs.includes(c._id));\n    setLoggedCommunities([...mine, ...other]);\n  }, [user, baseCommunities]);\n\n  // Prefill when editing\n  useEffect(() => {\n    if (isEdit && post) {\n      (async () => {\n        try {\n          const { data: community } = await axios.get(\n            `/community/${post._id}`\n          );\n          setPostCommunity(community.name);\n          setPostTitle(post.title);\n          setLinkFlairDrop(post.linkFlairID || '');\n          setPostContent(post.content);\n        } catch (err) {\n          console.error(\"Failed to populate previous data\", err);\n          handleError(err);\n        }\n      })();\n    }\n  }, [isEdit, post]);\n\n  \nconst handleSubmit = async (e) => {\n        e.preventDefault();\n        if(postCommunity === ''){\n            alert(\"Please enter a community\");\n            return;\n        }\n        if(postTitle === ''){\n            alert(\"Please enter a title\");\n            return;\n        }\n        if(postTitle.length > 100){\n            alert(\"Title is too long, please choose a new one\");\n            return;\n        }\n        var postFlairID;\n        if(linkFlairDrop !== '' && linkFlairType !== ''){\n            alert(\"Please select only one linkFlair\");\n            return;\n        } else if(linkFlairDrop !== ''){\n            postFlairID = linkFlairDrop;\n        } else if(linkFlairType !== ''){\n            if(linkFlairType.length > 30){\n                alert(\"Link Flair is too long, please choose a new one\");\n                return;\n            }\n\n            const newLinkFlair = {\n                content: linkFlairType\n            };\n            // async function createNewLinkFlair() {\n                console.log('Creating new link flair');\n                try{\n                    const linkFlair = await axios.post('http://localhost:8000/new_linkflair', newLinkFlair);\n                    postFlairID = linkFlair.data._id;\n                } catch{\n                    console.log('Error with link flair');\n                }\n            // }\n        }\n        if(postContent === ''){\n            alert(\"Please enter post content\");\n            return;\n        }\n\n        // Check hyperlinks\n    const hyperlinkRegex = /\\[([^\\]]*)\\]\\((.*?)\\)/g;\n\n    let match;\n\n    while ((match = hyperlinkRegex.exec(postContent)) !== null) {\n      if (match[1].trim()===''){\n        alert(\"The hyperlink text (inside []) cannot be empty!\");\n        return;\n      }\n      if (match[2].trim()===''){\n        alert(\"The hyperlink URL (inside ()) cannot be empty!\");\n        return;\n      }\n  \n\n      if (!(match[2].slice(0, 8) === 'https://' || match[2].slice(0, 7) === 'http://')) {\n        alert(\"The hyperlink URL must begin with either 'https://' or 'http://'!\");\n        return;\n      }\n    }\n\n        alert(\"Your post has successfully been created!\");\n\n\n      const payload = {\n        title:      postTitle,\n        content:    postContent,\n        linkFlair: postFlairID,\n        postedBy:   user.displayName,\n        postedDate: new Date(),\n        commentIDs: [],\n        views:      0,\n        community:  postCommunity\n      };\n\n    if (isEdit) editPost(payload, post);\n    else         addNewPost(payload);\n\n  }\n\n  function loadCommunitySelections() {\n    return (\n      <select\n        id=\"community_selection\"\n        value={postCommunity}\n        onChange={e => setPostCommunity(e.target.value)}\n      >\n        <option value=\"\">Select a Community</option>\n        {communities.map(c => (\n          <option key={c._id} value={c.name}>{c.name}</option>\n        ))}\n      </select>\n    );\n  }\n\n  function loadLinkFlairSelections() {\n    return (\n      <select\n        id=\"flair_selection\"\n        value={linkFlairDrop}\n        onChange={e => setLinkFlairDrop(e.target.value)}\n      >\n        <option value=\"\">Select a Link Flair</option>\n        {linkFlairs.map(f => (\n          <option key={f._id} value={f._id}>{f.content}</option>\n        ))}\n      </select>\n    );\n  }\n\n  return (\n    <div id=\"newpost_setup\">\n      <div id=\"newpost_header\">\n        <h1>{isEdit ? \"Edit Post\" : \"Create a New Post\"}</h1>\n      </div>\n      <form\n        id=\"newpost_form\"\n        action=\"/send\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <h3>Select Community (required)</h3>\n        {loadCommunitySelections()}\n\n        <h3>Post Title (required, max 100 characters)</h3>\n        <input\n          id=\"post_title\"\n          type=\"text\"\n          value={postTitle}\n          onChange={e => setPostTitle(e.target.value)}\n        />\n\n        <h3>Select Existing Flair</h3>\n        {loadLinkFlairSelections()}\n\n        <h3>Or Create a New Flair (max 30 characters)</h3>\n        <input\n          id=\"new_flair\"\n          type=\"text\"\n          value={linkFlairType}\n          onChange={e => setLinkFlairType(e.target.value)}\n        />\n\n        <h3>Content (required)</h3>\n        <textarea\n          id=\"content\"\n          value={postContent}\n          onChange={e => setPostContent(e.target.value)}\n        />\n\n        <button id=\"submit_post\" type=\"submit\">\n          {isEdit ? \"Save Changes\" : \"Submit Post\"}\n        </button>\n\n        {isEdit && onDelete && (\n          <button\n            style={{ backgroundColor: '#f44336', color: '#fff' }}\n            id=\"delete_post\"\n            type=\"button\"\n            onClick={() => {\n              if (window.confirm(\"Are you sure you want to delete this post?\")) {\n                onDelete(post);\n              }\n            }}\n          >\n            Delete Post\n          </button>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default NewPost;\n\nconst linkFlairShape = PropTypes.shape({\n  _id:     PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired\n});\n\nNewPost.propTypes = {\n  addNewPost: PropTypes.func.isRequired,\n  editPost:   PropTypes.func,           // required if isEdit\n  onDelete:   PropTypes.func,           // optional delete handler\n  linkFlairs: PropTypes.arrayOf(linkFlairShape).isRequired,\n  user: PropTypes.shape({\n    email:       PropTypes.string.isRequired,\n    displayName: PropTypes.string.isRequired\n  }).isRequired,\n  isEdit: PropTypes.bool,\n  post:   PropTypes.shape({ _id: PropTypes.string }).isRequired\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}